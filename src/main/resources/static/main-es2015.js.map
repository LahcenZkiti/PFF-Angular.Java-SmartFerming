{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/PopUp/traiter-imgage/traiter-imgage.component.ts","./src/app/PopUp/validate-upload/validate-upload.component.ts","./src/app/PopUp/validate-upload/validate-upload.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/layout/navigation/navigation.component.ts","./src/app/layout/navigation/navigation.component.html","./src/app/models/images.ts","./src/app/models/maladies-plant.ts","./src/app/pages/agriculture/agricul-login/agricul-login.component.ts","./src/app/pages/agriculture/agricul-login/agricul-login.component.html","./src/app/pages/agriculture/agricul-profile/agricul-profile.component.ts","./src/app/pages/agriculture/agricul-profile/agricul-profile.component.html","./src/app/pages/agriculture/agricul-signup/agricul-signup.component.ts","./src/app/pages/agriculture/agricul-signup/agricul-signup.component.html","./src/app/pages/agriculture/consulter-expert/consulter-expert.component.ts","./src/app/pages/agriculture/consulter-expert/consulter-expert.component.html","./src/app/pages/agriculture/detection-auto/detection-auto.component.ts","./src/app/pages/agriculture/detection-auto/detection-auto.component.html","./src/app/pages/agriculture/response-expert/response-expert.component.ts","./src/app/pages/agriculture/response-expert/response-expert.component.html","./src/app/pages/expert/expert-login/expert-login.component.ts","./src/app/pages/expert/expert-login/expert-login.component.html","./src/app/pages/expert/expert-pofile/expert-pofile.component.ts","./src/app/pages/expert/expert-pofile/expert-pofile.component.html","./src/app/pages/expert/expert-signup/expert-signup.component.ts","./src/app/pages/expert/expert-signup/expert-signup.component.html","./src/app/pages/expert/list-img/list-img.component.ts","./src/app/pages/expert/list-img/list-img.component.html","./src/app/pages/expert/treatment/treatment.component.ts","./src/app/pages/expert/treatment/treatment.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component.ts","./src/app/pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component.html","./src/app/pages/maladiesPlant/info-maladies/info-maladies.component.ts","./src/app/pages/maladiesPlant/info-maladies/info-maladies.component.html","./src/app/pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component.ts","./src/app/pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component.html","./src/app/services/agricul-auth-guard.service.ts","./src/app/services/authentication.service.ts","./src/app/services/expert-auth-guard.service.ts","./src/app/services/images.service.ts","./src/app/services/maladies.service.ts","./src/app/services/token-storage.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-traiter-imgage',\n  templateUrl: './traiter-imgage.component.html',\n  styleUrls: ['./traiter-imgage.component.css']\n})\nexport class TraiterImgageComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onValid(form:NgForm) {\n\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * Component\n */\n@Component({\n  selector: 'app-validate-upload',\n  templateUrl: './validate-upload.component.html',\n  styleUrls: ['./validate-upload.component.css']\n})\nexport class ValidateUploadComponent implements OnInit {\n\n  /**\n   * Input  of validate upload component\n   */\n  @Input() msg;\n  /**\n   * Creates an instance of validate upload component.\n   * @param activeModal \n   */\n  constructor(public activeModal:NgbActiveModal) { }\n\n  \n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\">DiagnoPlant <i class=\"fas fa-leaf\" style=\"color:green\"></i></h2>\n    <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button> -->\n</div>\n<div class=\"modal-body\">\n  <p>{{msg}}!</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetectionAutoComponent } from './pages/agriculture/detection-auto/detection-auto.component';\nimport { AddMaladiePlantComponent } from './pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component';\nimport { ListMaladiePlantComponent } from './pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component';\nimport { InfoMaladiesComponent } from './pages/maladiesPlant/info-maladies/info-maladies.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ConsulterExpertComponent } from './pages/agriculture/consulter-expert/consulter-expert.component';\nimport { ListImgComponent } from './pages/expert/list-img/list-img.component';\nimport { ResponseExpertComponent } from './pages/agriculture/response-expert/response-expert.component';\nimport { TreatmentComponent } from './pages/expert/treatment/treatment.component';\nimport { AgriculLoginComponent } from './pages/agriculture/agricul-login/agricul-login.component';\nimport { AgriculSignupComponent } from './pages/agriculture/agricul-signup/agricul-signup.component';\nimport { AgriculAuthGuardService } from './services/agricul-auth-guard.service';\nimport { ExpertAuthGuardService } from './services/expert-auth-guard.service';\nimport { ExpertLoginComponent } from './pages/expert/expert-login/expert-login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo:'home',\n    pathMatch:'full'\n  },\n  {\n    path: 'home',\n    component:HomeComponent\n  },\n  {\n    path: 'login',\n    component: AgriculLoginComponent\n  },\n  {\n    path:'register',\n    component: AgriculSignupComponent\n  },\n  {\n    path: 'login/expert',\n    component: ExpertLoginComponent\n  },\n  {\n    path:'detect-auto',\n    component: DetectionAutoComponent, canActivate:[AgriculAuthGuardService]\n  },\n  {\n    path: 'consulter',\n    component: ConsulterExpertComponent, canActivate:[AgriculAuthGuardService]\n  },\n  {\n    path: 'espace-expert',\n    component: ListImgComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'espace-response/image/:id',\n    component: TreatmentComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path:'add-maladies',\n    component: AddMaladiePlantComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'listeMaladies',\n    component: ListMaladiePlantComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'edit/maladie/:id',\n    component: InfoMaladiesComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'allresponse',\n    component: ResponseExpertComponent, canActivate:[AgriculAuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'smartFerming';\n\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showExpertBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService:TokenStorageService){}\n\n  ngOnInit(): void  {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n\n    if(this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      // this.roles = user.roles;\n\n      // this.showAdminBoard = this.roles.includes('ROLE_AMIN');\n      // this.showExpertBoard = this.roles.includes('ROLE_EXPERT');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(){\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<div>\n    <app-navigation></app-navigation>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './layout/navigation/navigation.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DetectionAutoComponent } from './pages/agriculture/detection-auto/detection-auto.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ValidateUploadComponent } from './PopUp/validate-upload/validate-upload.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AddMaladiePlantComponent } from './pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component';\nimport { ListMaladiePlantComponent } from './pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component';\nimport { InfoMaladiesComponent } from './pages/maladiesPlant/info-maladies/info-maladies.component';\nimport { TraiterImgageComponent } from './PopUp/traiter-imgage/traiter-imgage.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ConsulterExpertComponent } from './pages/agriculture/consulter-expert/consulter-expert.component';\nimport { ExpertLoginComponent } from './pages/expert/expert-login/expert-login.component';\nimport { ExpertSignupComponent } from './pages/expert/expert-signup/expert-signup.component';\nimport { ExpertPofileComponent } from './pages/expert/expert-pofile/expert-pofile.component';\nimport { ListImgComponent } from './pages/expert/list-img/list-img.component';\nimport { AgriculLoginComponent } from './pages/agriculture/agricul-login/agricul-login.component';\nimport { AgriculSignupComponent } from './pages/agriculture/agricul-signup/agricul-signup.component';\nimport { AgriculProfileComponent } from './pages/agriculture/agricul-profile/agricul-profile.component';\nimport { ResponseExpertComponent } from './pages/agriculture/response-expert/response-expert.component';\nimport { TreatmentComponent } from './pages/expert/treatment/treatment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    DetectionAutoComponent,\n    ValidateUploadComponent,\n    AddMaladiePlantComponent,\n    ListMaladiePlantComponent,\n    InfoMaladiesComponent,\n    TraiterImgageComponent,\n    FooterComponent,\n    HomeComponent,\n    ConsulterExpertComponent,\n    ExpertLoginComponent,\n    ExpertSignupComponent,\n    ExpertPofileComponent,\n    ListImgComponent,\n    AgriculLoginComponent,\n    AgriculSignupComponent,\n    AgriculProfileComponent,\n    ResponseExpertComponent,\n    TreatmentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-top-center'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"card-footer font-small\" style=\"background-color: rgb(202, 202, 202);\">\n\n  <div style=\"background-color: #4dd14d;\">\n    <div class=\"container\">\n\n      <!-- Grid row-->\n      <div class=\"row py-4 d-flex align-items-center\">\n\n        <!-- Grid column -->\n        <div class=\"col-md-6 col-lg-5 text-center text-md-left mb-4 mb-md-0\">\n          <h6 class=\"mb-0\">Get connected with us on social networks!</h6>\n        </div>\n        <!-- Grid column -->\n\n        <!-- Grid column -->\n        <div class=\"col-md-6 col-lg-7 text-center text-md-right\">\n\n          <!-- Facebook -->\n          <a class=\"fb-ic\">\n            <i class=\"fab fa-facebook-f white-text mr-4\"> </i>\n          </a>\n          <!-- Twitter -->\n          <a class=\"tw-ic\">\n            <i class=\"fab fa-twitter white-text mr-4\"> </i>\n          </a>\n          <!-- Google +-->\n          <a class=\"gplus-ic\">\n            <i class=\"fab fa-google-plus-g white-text mr-4\"> </i>\n          </a>\n          <!--Linkedin -->\n          <a class=\"li-ic\">\n            <i class=\"fab fa-linkedin-in white-text mr-4\"> </i>\n          </a>\n          <!--Instagram-->\n          <a class=\"ins-ic\">\n            <i class=\"fab fa-instagram white-text\"> </i>\n          </a>\n\n        </div>\n        <!-- Grid column -->\n\n      </div>\n      <!-- Grid row-->\n\n    </div>\n  </div>\n\n  <!-- Footer Links -->\n  <div class=\"container text-center text-md-left mt-5\">\n\n    <!-- Grid row -->\n    <div class=\"row mt-3\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n\n        <!-- Content -->\n        <h6 class=\"text-uppercase font-weight-bold\">DiagnoPlant</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\n          consectetur\n          adipisicing elit.\n        </p>\n\n      </div>\n      <!-- Grid column -->\n\n      <!-- Grid column -->\n      <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\">Products</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          <a href=\"#!\">MDBootstrap</a>\n        </p>\n        <p>\n          <a href=\"#!\">MDWordPress</a>\n        </p>\n        <p>\n          <a href=\"#!\">BrandFlow</a>\n        </p>\n        <p>\n          <a href=\"#!\">Bootstrap Angular</a>\n        </p>\n\n      </div>\n      <!-- Grid column -->\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\">Useful links</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          <a href=\"#!\">Your Account</a>\n        </p>\n        <p>\n          <a href=\"#!\">Become an Affiliate</a>\n        </p>\n        <p>\n          <a href=\"#!\">Shipping Rates</a>\n        </p>\n        <p>\n          <a href=\"#!\">Help</a>\n        </p>\n\n      </div>\n      <!-- Grid column -->\n\n      <!-- Grid column -->\n      <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\">Contact</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          <i class=\"fas fa-home mr-3\"></i> Ait Melloul, 80160, MAROC</p>\n        <p>\n          <i class=\"fas fa-envelope mr-3\"></i> info@diagnoplant.com</p>\n        <p>\n          <i class=\"fas fa-phone mr-3\"></i> + 01 234 567 88</p>\n        <p>\n          <i class=\"fas fa-print mr-3\"></i> + 01 234 567 89</p>\n\n      </div>\n      <!-- Grid column -->\n\n    </div>\n    <!-- Grid row -->\n\n  </div>\n  <!-- Footer Links -->\n\n  <!-- Copyright -->\n  <div class=\"text-center py-3\" style=\"background-color: darkgray;\">© 2020 Copyright:\n    <a href=\"https://ZkitiDev.com/\"> ZkitiDev.com</a>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { User } from 'src/app/models/user';\n\nconst ADMIN = 'ADMIN';\nconst EXPERT = 'EXPERT';\nconst AGRICULTURE = 'AGRICULTURE';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  public isMenuCollapsed = true;\n\n  private roles: string[]; \n  isLoggedIn = false;\n  showAdminBoard = false;\n  showExpertBoard = false;\n  showAgricultureBoard = false;\n  username: string;\n  loggedInUser:any;\n\n  constructor(private router:Router,\n              private tokenStorageService:TokenStorageService,\n              private authService:AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    this.authService.getLoggedInUser.subscribe((user:User)=> {\n      this.updateNavBar(user);\n    });\n\n    if(this.isLoggedIn){\n      const user = this.tokenStorageService.getUser();\n      const userType = this.tokenStorageService.getUserType();\n\n      this.roles = user.roles;\n\n      this.showExpertBoard = userType == EXPERT;\n      this.showAgricultureBoard = userType == AGRICULTURE;\n      this.showAdminBoard = userType == ADMIN;\n\n      this.username = user.username;\n    }\n  }\n\n  onLogout() {\n    this.tokenStorageService.signOut();\n    this.router.navigate(['/login']).then(()=> {\n      window.location.reload();\n    });\n  }\n\n  updateNavBar(user:User) {\n    console.log(\"LoggerInUser \", user);\n      this.isLoggedIn = true;\n      this.loggedInUser = user;\n      console.log(\"Logged in user : \", this.loggedInUser);\n      this.showExpertBoard = user.userType == EXPERT;\n      console.log(\"showExpertBoard\");\n      console.log(this.showExpertBoard);\n      this.showAgricultureBoard = user.userType == AGRICULTURE;\n      console.log(\"showAgricultureBoard\");\n      console.log(this.showAgricultureBoard);\n      this.showAdminBoard = user.userType == ADMIN;\n      console.log(\"showAdminBoard\");\n      console.log(this.showAdminBoard);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-success\">\n    <a class=\"navbar-brand\" [routerLink]=\"['']\" routerLinkActive=\"router-link-active\" >DiagnoPlant</a>\n    <button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i class=\"fas fa-bars\"></i>\n    </button>\n\n    <!--home-->\n    <div *ngIf=\"!showAgricultureBoard && !showExpertBoard && !showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >About</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >Blog</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >Contact</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success my-2 my-sm-0\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" >Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n        <button class=\"btn btn-success my-2 my-sm-0\" [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\" >Signup <i class=\"fa fa-sign-out\"></i></button>\n    </div>\n\n    <!--agriculture-->\n    <div *ngIf=\"showAgricultureBoard && !showExpertBoard && !showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/detect-auto']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/consulter']\" routerLinkActive=\"router-link-active\" >Consulter l'expert</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/allresponse']\" routerLinkActive=\"router-link-active\" >avis expert</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success my-2 my-sm-0\" (click)=\"onLogout()\">LogOut <i class=\"fas fa-sign-out-alt\"></i></button>\n    </div>\n    \n    <!--expert-->\n    <div *ngIf=\"!showAgricultureBoard && showExpertBoard && !showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/espace-expert']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/listeMaladies']\" routerLinkActive=\"router-link-active\" >Consulter les fiches des maladies</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/add-maladies']\" routerLinkActive=\"router-link-active\" >Ajouter une nouvelle maladie</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success mr-2 my-2 my-sm-0\" (click)=\"onLogout()\">LogOut <i class=\"fas fa-sign-out-alt\"></i></button>\n    </div>\n    \n    <!--admin-->\n    <div *ngIf=\"!showAgricultureBoard && !showExpertBoard && showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/espace-expert']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/agriculture']\" routerLinkActive=\"router-link-active\" >Espace agriculture</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/expert']\" routerLinkActive=\"router-link-active\" >Espace expert</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/dashboard']\" routerLinkActive=\"router-link-active\" >Dashboard</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success mr-2 my-2 my-sm-0\" (click)=\"onLogout()\">LogOut <i class=\"fas fa-sign-out-alt\"></i></button>\n    </div>\n</nav>\n","import { MaladiePlante } from './maladies-plant';\n\nexport class Image {\n    id ?: number;\n    image: string;\n    etatTraitement: boolean;\n    urlImage: string;\n    infosCompl: string;\n    maladiePlante : MaladiePlante;  \n\n}\n","export  class MaladiePlante {\n    idMaladiePlante ?: number;\n    nomMaladie : string;\n    symptomes : string;\n    causes : string;\n    traitement : string;\n    actionsPreventives : string\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-agricul-login',\n  templateUrl: './agricul-login.component.html',\n  styleUrls: ['./agricul-login.component.css']\n})\nexport class AgriculLoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService:AuthenticationService,\n              private tokenStorage: TokenStorageService,\n              private router:Router,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onlogin(){\n    this.authService.agricultureLogin(this.form).subscribe(\n      (user:User) => {\n        console.log(user);\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        console.log(\"login successful\");\n        this.toastr.success(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        this.reloadPage();\n\n      },\n      err => {\n        console.log(err);\n        this.errorMessage = err.error.message;\n        this.toastr.error(\"Login failed\");\n        this.isLoginFailed = true;\n      }\n    )\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n}\n","\n<div class=\"content\">\n  <div class=\"container p-4\">\n    <form class=\"p-5\" *ngIf=\"!isLoggedIn\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onlogin()\" novalidate>\n      <div class=\"form-group\">\n        <div style=\"text-align: right;\">\n          <a [routerLink]=\"['/login/expert']\" routerLinkActive=\"router-link-active\" ><label for=\"expert\">Login as Expert</label></a>\n        </div>\n        <label class=\"control-label\">User name</label>\n        <input type=\"text\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\" class=\"form-control\" aria-describedby=\"User name\">\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n          Username is required!\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label class=\"control-label\">Password</label>\n        <input type=\"password\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\" class=\"form-control\">\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\" >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"Check\">\n        <label class=\"form-check-label\" for=\"Check\">Check me out</label>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n    </form>\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      Logged in as {{ roles }}.\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-agricul-profile',\n  templateUrl: './agricul-profile.component.html',\n  styleUrls: ['./agricul-profile.component.css']\n})\nexport class AgriculProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>agricul-profile works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-agricul-signup',\n  templateUrl: './agricul-signup.component.html',\n  styleUrls: ['./agricul-signup.component.css']\n})\nexport class AgriculSignupComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService:AuthenticationService,\n              private router:Router,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.authService.agricultureRegister(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.toastr.success(\"Your registration is successful!\");\n        this.router.navigateByUrl('login')\n      },\n      err => {\n        console.log(err)\n        this.errorMessage = err.error.message;\n        this.toastr.error(\"Signup failed!\");\n        this.isSignUpFailed = true;\n      }\n    )\n  }\n}\n","<div class=\"content\">\n  <div class=\"container p-4\">\n\n    <!-- <div class=\"text-center pt-4\">\n      <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"rounded-circle\"/>\n    </div> -->\n    <form class=\"p-4\" *ngIf=\"!isSuccessful\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit()\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"control-label\">First name</label>\n        <input type=\"text\" class=\"form-control\" name=\"firstname\" [(ngModel)]=\"form.firstname\" #firstname=\"ngModel\" minlength=\"3\" maxlength=\"15\" aria-describedby=\"first name\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && firstname.invalid\">\n          <div *ngIf=\"firstname.errors.required\">Firstname is required</div>\n          <div *ngIf=\"firstname.errors.minlength\">\n            Firstname must be at least 3 characters\n          </div>\n          <div *ngIf=\"firstname.errors.maxlength\">\n            Firstname must be at most 15 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"control-label\">Last name</label>\n        <input type=\"text\" class=\"form-control\" name=\"lastname\" [(ngModel)]=\"form.lastname\" minlength=\"3\" maxlength=\"15\" #lastname=\"ngModel\" aria-describedby=\"last name\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && lastname.invalid\">\n            <div *ngIf=\"lastname.errors.required\">LastName is required</div>\n            <div *ngIf=\"lastname.errors.minlength\">\n              LastName must be at least 3 characters\n            </div>\n            <div *ngIf=\"lastname.errors.maxlength\">\n              LastName must be at most 15 characters\n            </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"control-label\">Email</label>\n        <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required email #email=\"ngModel\" aria-describedby=\"email\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"control-label\">User name</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" required minlength=\"3\" maxlength=\"20\" #username=\"ngModel\" aria-describedby=\"agriculture name\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"control-label\">Password</label>\n        <input type=\"password\" name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\" #password=\"ngModel\" class=\"form-control\" >\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-consulter-expert',\n  templateUrl: './consulter-expert.component.html',\n  styleUrls: ['./consulter-expert.component.css']\n})\nexport class ConsulterExpertComponent implements OnInit {\n\n  /**\n   * Url  of expert component\n   */\n  API_URL = 'http://localhost:8080/api/img/';\n\n  /**\n   * Selected file of expert component\n   */\n  selectedFile : File ;\n  errorMessage = '';\n  progress: number = 0;\n\n  /**\n   * Creates an instance of expert component.\n   * @param http\n   */\n  constructor(private http:HttpClient,\n              // private modalService: NgbModal,\n              private toastr: ToastrService) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Determines whether file selected on\n   * @param event\n   */\n  onFileSelected(event) {\n    this.selectedFile = <File>event.target.files[0];\n    console.log(event);\n  }\n\n  /**\n   * Determines whether upload on\n   */\n  onUpload(){\n    const fd = new FormData();\n    fd.append('file', this.selectedFile, this.selectedFile.name)\n    this.http.post(this.API_URL + 'telechargerimage', fd, {\n      reportProgress:true,\n      observe:'events'\n    })\n    .subscribe(\n      event => {\n        if(event.type === HttpEventType.UploadProgress){\n          this.progress = Math.round(event.loaded/event.total * 100);\n          console.log('Upload Progress: '+ Math.round(event.loaded / event.total * 100) + '%')\n        }else if (event.type === HttpEventType.Response){\n          setTimeout(() => {\n            this.progress = 0;\n          }, 1500);\n          console.log(event);\n          this.successNot();\n        }\n      },\n\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.errorNot();\n      }\n    );\n  }\n\n\n  /**\n   * Success notifications\n   */\n  successNot(){\n    this.toastr.success('Votre image a bien été enregistrée!', 'Upload msg', {\n      progressAnimation: 'increasing'\n    });\n  }\n\n  /**\n   * Errors notifications\n   */\n  errorNot(){\n    this.toastr.error('veuillez sélectionner une image !');\n  }\n\n\n}\n","<div class=\"body\">\n\n    <header class=\"text-white text-center\">\n        <h1 class=\"p-4\">Diagno Plant</h1>\n        <p class=\"lead mb-5\">Bienvenue zkiti lahcen, Veuillez télécharger une image de votre plant de tomate pour l'envoyer à l'expert</p>\n        <img src=\"https://www.icone-png.com/png/41/41466.png\" alt=\"\" width=\"150\" class=\"mb-4\">\n    </header>\n\n    <div class=\"row py-4\">\n        <div class=\"col-lg-6 mx-auto\">\n            <div class=\"input-group mb-3 px-2 py-2 rounded-pill bg-white shadow-sm\">\n                <input id=\"upload\" type=\"file\" name=\"file\" class=\"form-control border-0\" (change)=\"onFileSelected($event)\" value=\"0\">\n                <label id=\"upload-label\" for=\"upload\" class=\"font-weight-light\">choisissez l'image</label>\n                <div class=\"input-group-append\">\n                    <label for=\"upload\" class=\"btn btn-light m-0 rounded-pill px-4\"> <i class=\"fa fa-cloud-upload mr-2 text-muted\"></i><small class=\"text-uppercase font-weight-bold text-muted\">choisissez l'image</small></label>\n                </div>\n            </div>\n            <div class=\"mb-3 px-2 py-2 text-center\">\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"onUpload()\">Upload image</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Component\n */\n@Component({\n  selector: 'app-detection-auto',\n  templateUrl: './detection-auto.component.html',\n  styleUrls: ['./detection-auto.component.css']\n})\nexport class DetectionAutoComponent implements OnInit {\n\n  /**\n   * Selected file of detection auto component\n   */\n  selectedFile : File ;\n\n  /**\n   * Creates an instance of detection auto component.\n   * @param http \n   */\n  constructor(private http:HttpClient) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Determines whether file selected on\n   * @param event \n   */\n  onFileSelected(event) {\n    this.selectedFile = <File>event.target.files[0];\n    console.log(event);\n  }\n\n  /**\n   * Determines whether upload on\n   */\n  onUpload(){\n  }\n\n  \n\n}\n","<div class=\"body\">\n\n    <header class=\"text-white text-center\">\n        <h1 class=\"p-4\">Diagno Plant</h1>\n        <p class=\"lead mb-5\">Bienvenue zkiti lahcen Veuillez télécharger une image de votre plant de tomate pour détecter la maladie</p>\n        <img src=\"https://www.icone-png.com/png/41/41466.png\" alt=\"\" width=\"150\" class=\"mb-4\">\n    </header>\n\n    <div class=\"row py-4\">\n        <div class=\"col-lg-6 mx-auto\">\n            <div class=\"input-group mb-3 px-2 py-2 rounded-pill bg-white shadow-sm\">\n                <input id=\"upload\" type=\"file\" name=\"file\" class=\"form-control border-0\" (change)=\"onFileSelected($event)\">\n                <label id=\"upload-label\" for=\"upload\" class=\"font-weight-light\">choisissez l'image</label>\n                <div class=\"input-group-append\">\n                    <label for=\"upload\" class=\"btn btn-light m-0 rounded-pill px-4\"> <i class=\"fa fa-cloud-upload mr-2 text-muted\"></i><small class=\"text-uppercase font-weight-bold text-muted\">choisissez l'image</small></label>\n                </div>\n            </div>\n            <div class=\"mb-3 px-2 py-2 text-center\">\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"onUpload()\">Upload image</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/images';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { ImagesService } from 'src/app/services/images.service';\n\n@Component({\n  selector: 'app-response-expert',\n  templateUrl: './response-expert.component.html',\n  styleUrls: ['./response-expert.component.css']\n})\nexport class ResponseExpertComponent implements OnInit {\n\n  images : Image \n  maladiePlantes : MaladiePlante[]\n  constructor(private imagesService:ImagesService) { }\n\n  ngOnInit(): void {\n    this.getImagesTrit();\n  }\n\n  getImagesTrit() {\n    this.imagesService.findAllTrit().subscribe(data => {\n      this.images = data\n      console.log(JSON.stringify(data));\n    })\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"row row-cols-1 row-cols-md-3 p-4\">\n        <div class=\"col mb-4\" *ngFor=\"let image of images\">\n        \n            <div class=\"card h-100\" style=\"background-color: #d7dde8;\">\n                <img src=\"http://localhost:8080/api/img/image/{{image.id}}\"\n                  class=\"card-img-top\" alt=\"\">\n                <div class=\"card-body\">\n                    <h2 class=\"card-title\">Recommandation d'expert</h2>\n                    <!-- <p> {{image | json }}</p> -->\n                        \n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Nom de maladie</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.nomMaladie}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Symptoms</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.symptomes}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Causes</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.causes}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Traitement</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.traitement}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">actionsPreventives</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.actionsPreventives}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Informations complementaires</h3>\n                    <p class=\"card-text\">{{image.infosCompl}}</p>\n                    <hr>\n                    <!--Rating-->\n                    <ul class=\"rating mb-1 pb-2\">\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"far fa-star fa-xs\"></i>\n                        </li>\n                    </ul>\n                    <hr>\n                    <p class=\"card-text\"><small class=\"text-muted\">Last updated 2 mins ago</small></p>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-expert-login',\n  templateUrl: './expert-login.component.html',\n  styleUrls: ['./expert-login.component.css']\n})\nexport class ExpertLoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService:AuthenticationService,\n    private tokenStorage: TokenStorageService,\n    private router:Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onlogin(){\n    this.authService.expertLogin(this.form).subscribe(\n      (user:User) => {\n        console.log(user);\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        console.log('login successful');\n        this.toastr.success(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        this.reloadPage();\n      },\n\n      err => {\n        console.log(err);\n        this.errorMessage = err.error.message;\n        this.toastr.error(\"Login failed\");\n        this.isLoginFailed = true;\n        \n      }\n    )\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n\n}\n","\n<div class=\"content\">\n    <div class=\"container p-4\">\n      <form class=\"p-5\" *ngIf=\"!isLoggedIn\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onlogin()\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"control-label\">User name</label>\n          <input type=\"text\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\" class=\"form-control\" aria-describedby=\"User name\">\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n            Username is required!\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label class=\"control-label\">Password</label>\n          <input type=\"password\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\" class=\"form-control\">\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\" >\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"form-group form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"Check\">\n          <label class=\"form-check-label\" for=\"Check\">Check me out</label>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n      </form>\n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expert-pofile',\n  templateUrl: './expert-pofile.component.html',\n  styleUrls: ['./expert-pofile.component.css']\n})\nexport class ExpertPofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expert-pofile works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expert-signup',\n  templateUrl: './expert-signup.component.html',\n  styleUrls: ['./expert-signup.component.css']\n})\nexport class ExpertSignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expert-signup works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/images';\nimport { ImagesService } from 'src/app/services/images.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-img',\n  templateUrl: './list-img.component.html',\n  styleUrls: ['./list-img.component.css']\n})\nexport class ListImgComponent implements OnInit {\n\n  \n  /**\n   * Images  of espace expert component\n   */\n  images: Image; \n\n  /**\n   * Creates an instance of espace expert component.\n   * @param imagesServices \n   * @param router \n   * @param modalService \n   */\n  constructor(private imagesServices:ImagesService,\n              private router:Router) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.getImages();\n  }\n\n  /**\n   * Gets images\n   */\n  getImages() {\n    this.imagesServices.findAllNonTrit().subscribe(images => {\n      this.images = images\n    })\n  }\n\n  /**\n   * Traits img\n   * @param imgId \n   */\n  traitImg(imgId: number) {\n    // this.modalService.open(TraiterImgageComponent);\n    this.router.navigate(['/espace-response/image', imgId]);\n  }\n\n}","<div class=\"content\">\n    <div class=\"d-flex flex-wrap\">\n        <div class=\"p-4\" *ngFor=\"let image of images\">\n            <div class=\"card\" style=\"width:400px\">\n                <!-- <div class=\"card-header\">\n                    <h4>{{image.image}}<i class=\"fas fa-images\"></i></h4>\n                </div> -->\n                <div class=\"card-body p-4\">\n                    <img class=\"card-img-top\" src=\"http://localhost:8080/api/img/image/{{image.id}}\"  alt=\"\">\n                    <button class=\"btn btn-secondary m-2\" type=\"submit\" (click)=\"traitImg(image.id)\">Traiter l'image</button> \n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/images';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ImagesService } from 'src/app/services/images.service';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-treatment',\n  templateUrl: './treatment.component.html',\n  styleUrls: ['./treatment.component.css']\n})\nexport class TreatmentComponent implements OnInit {\n\n\n  images : Image = new Image();\n\n  maladiePlantes: MaladiePlante[] ;\n\n  selectedMaladie: MaladiePlante = new MaladiePlante();\n\n  constructor(private route:ActivatedRoute,\n              private imagesService:ImagesService,\n              private maladieService:MaladiesService,\n              private router:Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(imgId => {\n      console.log(\"image_id is: \",imgId);\n      this.imagesService.findByID(imgId.id).subscribe( image => {\n        this.images = image;\n        console.log(\"get image infos \", JSON.stringify(image));\n        if (image === undefined){\n          console.log(\"can't find image with id: \", imgId);\n          return\n        }\n      });\n\n      this.getMaladies();\n    })\n\n  }\n\n  getMaladies(): any {\n    this.maladieService.findAll().subscribe(data =>{\n      this.maladiePlantes = data;\n      console.log(\"get data of maladies \", JSON.stringify(data));\n\n      if(data === undefined){\n        console.log(\"cant't find data\")\n      }\n    })\n  }\n\n  onValid(img:NgForm) {\n    this.imagesService.addResp(this.images).subscribe(image => {\n      this.images = image;\n      img.reset();\n      this.router.navigate(['espace-expert']);\n      console.log(\"data sent ==>\",JSON.stringify(image));\n    })\n  }\n}\n","<div class=\"content\">\n    <form (ngSubmit)=\"onValid(img)\" *ngIf=\"images\" #img=\"ngForm\"  class=\"justify-content-center p-4\" novalidate>\n        \n        <div class=\"form-group\">\n            <label for=\"images\" style=\"font-size: x-large;\">Nom de maladie</label>\n            <select name=\"imagesMaladiesPlante\" class=\"form-control\" id=\"images\" [(ngModel)]=\"images.maladiePlante\" >\n                <!-- <option value=\"\">Selectionne une maladie</option> -->\n                <option *ngFor=\"let maladiePlante of maladiePlantes\" [ngValue]=\"maladiePlante\">\n                    {{maladiePlante.nomMaladie}}\n                </option>\n            </select>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"infosCompl\" style=\"font-size: x-large;\">Informations complementaires</label>\n            <textarea [(ngModel)]=\"images.infosCompl\"  name=\"infosCompl\" class=\"form-control\" id=\"infosCompl\" rows=\"3\" placeholder=\"Entrer les informations complementaires\"></textarea>\n        </div>\n    \n        <div class=\"form-group\">\n            <button class=\"btn btn-secondary\" type=\"submit\">Valider</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content p-4\">\n  <div class=\"container my-5 py-5 z-depth-1\">\n\n\n    <!--Section: Content-->\n    <section class=\"dark-grey-text text-center\">\n      \n      <h3 class=\"pt-5 pb-2 head-title\">Diagno Plant Your Home</h3>\n\n      <div class=\"row mx-3\">\n        <div class=\"col-md-4 px-4 mb-4\">\n\n          <div class=\"view\">\n            <img src=\"https://mdbootstrap.com/img/illustrations/drawkit-drawing-man-colour.svg\" class=\"img-fluid\" alt=\"smaple image\">\n          </div>\n\n        </div>\n      <div class=\"col-md-4 px-4 mb-4\">\n\n          <div class=\"view\">\n            <img src=\"https://mdbootstrap.com/img/illustrations/drawkit-phone-conversation-colour.svg\" class=\"img-fluid\" alt=\"smaple image\">\n          </div>\n\n        </div>\n        <div class=\"col-md-4 px-4 mb-4\">\n\n          <div class=\"view\">\n            <img src=\"https://mdbootstrap.com/img/illustrations/app-user-colour.svg\" class=\"img-fluid\" alt=\"smaple image\">\n          </div>\n\n        </div>\n      </div>\n\n    </section>\n    <!--Section: Content-->\n\n\n  </div>\n    <div id=\"carouselExampleCaptions\" class=\"carousel slide p-5\" data-ride=\"carousel\">\n        <ol class=\"carousel-indicators\">\n          <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"0\" class=\"active\"></li>\n          <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"1\"></li>\n          <!-- <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"2\"></li> -->\n        </ol>\n        <div class=\"carousel-inner\">\n          <div class=\"carousel-item active\">\n            <img src=\"https://cdn.pixabay.com/photo/2017/03/17/12/47/winegrowing-2151457_960_720.jpg\" class=\"d-block w-100\" alt=\"\">\n            <div class=\"carousel-caption d-none d-md-block\">\n              <h5>First slide label</h5>\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </div>\n          </div>\n          <div class=\"carousel-item\">\n            <img src=\"https://cdn.pixabay.com/photo/2018/06/22/06/13/season-3490072_960_720.jpg\" class=\"d-block w-100\" alt=\"\">\n            <div class=\"carousel-caption d-none d-md-block\">\n              <h5>Third slide label</h5>\n              <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n            </div>\n          </div>\n        </div>\n        <a class=\"carousel-control-prev\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"prev\">\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">Previous</span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"next\">\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">Next</span>\n        </a>\n    </div>\n\n    <div class=\"container my-5 z-depth-1\">\n\n\n      <!--Section: Content-->\n      <section class=\"dark-grey-text p-5\">\n    \n        <!-- Grid row -->\n        <div class=\"row\">\n    \n          <!-- Grid column -->\n          <div class=\"col-md-5 mb-4 mb-md-0\">\n    \n            <div class=\"view\">\n              <img src=\"https://mdbootstrap.com/img/illustrations/undraw_Group_chat_unwm.svg\" class=\"img-fluid\" alt=\"smaple image\">\n            </div>\n    \n          </div>\n          <!-- Grid column -->\n    \n          <!-- Grid column -->\n          <div class=\"col-md-7 mb-lg-0 mb-4\">\n    \n            <!-- Form -->\n            <form class=\"\" action=\"\">\n    \n              <!-- Section heading -->\n              <h3 class=\"font-weight-bold my-3\">Subscribe</h3>\n              \n              <p class=\"text-muted mb-4 pb-2\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam vitae, fuga similique quos aperiam tenetur quo ut rerum debitis.</p>\n     \n              <div class=\"input-group\">\n                <input type=\"email\" class=\"form-control\" placeholder=\"Enter your email address\" aria-label=\"Enter your email address\"\n                  aria-describedby=\"button-addon2\">\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-md btn-primary rounded-right m-0 px-3 py-2 z-depth-0 waves-effect\" type=\"submit\" id=\"button-addon2\">Button</button>\n                </div>\n              </div>\n              <small class=\"form-text black-text\"><strong>* Leave your email addres to be notified first.</strong></small>\n              \n            </form>\n            <!-- Form -->\n    \n          </div>\n          <!-- Grid column -->\n    \n        </div>\n        <!-- Grid row -->\n        \n      </section>\n      <!--Section: Content-->\n    \n    \n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ValidateUploadComponent } from 'src/app/PopUp/validate-upload/validate-upload.component';\nimport { error } from '@angular/compiler/src/util';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-maladie-plant',\n  templateUrl: './add-maladie-plant.component.html',\n  styleUrls: ['./add-maladie-plant.component.css']\n})\nexport class AddMaladiePlantComponent implements OnInit {\n\n  errorMessage = '';\n\n  maladies : MaladiePlante = {\n    nomMaladie : '',\n    symptomes : '',\n    causes : '',\n    traitement : '',\n    actionsPreventives: ''\n  } ;\n  constructor(private maladieService:MaladiesService,\n              private modalService: NgbModal,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  addMaladie(form: NgForm) {\n    this.maladieService.addOne(this.maladies).subscribe(maladie => {\n      this.maladies = maladie;\n      err =>{\n          console.log(err);\n        this.errorMessage = err.error.message;\n        this.toastr.error(err.error.message);\n\n        }\n      console.log(JSON.stringify(maladie));\n      form.reset();\n    })\n  }\n\n  open() {\n    // const modalRef = this.modalService.open(ValidateUploadComponent);\n    if (this.maladies.nomMaladie == null || this.maladies.nomMaladie == '' ||\n        this.maladies.symptomes == null || this.maladies.symptomes == '' ||\n        this.maladies.causes == null || this.maladies.causes == '' ||\n        this.maladies.traitement == null || this.maladies.traitement == '' || \n        this.maladies.actionsPreventives == null || this.maladies.actionsPreventives == ''){\n          this.toastr.error('Faux! Veuillez remplir tous les blancs ');\n          // modalRef.componentInstance.msg = 'Faux! Veuillez remplir tous les blancs ';\n          return false;\n    }else{\n      this.toastr.success('les information a bien été enregistrer!');\n      // modalRef.componentInstance.msg = 'les information a bien été enregistrer!';\n      return true;\n    }\n  }\n}\n","<div class=\"content\">\n    <form (ngSubmit)=\"addMaladie(form)\" #form=\"ngForm\" class=\"justify-content-center p-4\">\n        <div class=\"form-group\">\n            <label for=\"formGroupNomMal\" style=\"font-size: x-large;\">Nom de maladie</label>\n            <input [(ngModel)]=\"maladies.nomMaladie\" name=\"nomMaladie\" type=\"text\" class=\"form-control\" id=\"formGroupNomMal\" placeholder=\"Entrer le nom de la maladie\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les symptomes</label>\n            <textarea [(ngModel)]=\"maladies.symptomes\" name=\"symptomes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les symptomes\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les causes</label>\n            <textarea [(ngModel)]=\"maladies.causes\" name=\"causes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les causes\"></textarea>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Le traitement</label>\n            <textarea [(ngModel)]=\"maladies.traitement\" name=\"traitement\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer le traitement\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les actions préventives</label>\n            <textarea [(ngModel)]=\"maladies.actionsPreventives\" name=\"actionsPreventives\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les actions préventives\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <button class=\"btn btn-secondary\" type=\"submit\" (click)=\"open()\">Enregistrer</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { error } from 'protractor';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-info-maladies',\n  templateUrl: './info-maladies.component.html',\n  styleUrls: ['./info-maladies.component.css']\n})\nexport class InfoMaladiesComponent implements OnInit {\n\n  maladies : MaladiePlante ;\n  constructor(private route:ActivatedRoute,\n              private router:Router,\n              private maladiesService:MaladiesService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(mldId => {\n      console.log(\"id is => \", mldId)\n      this.maladiesService.findById(mldId.id).subscribe( maladie => {\n        this.maladies = maladie;\n        console.log(JSON.stringify(maladie));\n      })\n\n      error => {\n        console.log(\"error : \", error);\n      }\n    })\n  }\n\n\n  editMaladie(f:NgForm){\n    this.maladiesService.update(this.maladies).subscribe(()=>{\n      this.router.navigate(['listeMaladies']);\n      f.reset()\n    })\n  }\n\n}\n","<div class=\"content\">\n  <form (ngSubmit)=\"editMaladie(f)\" *ngIf=\"maladies\" #f=\"ngForm\" class=\"justify-content-center p-4\">\n      <div class=\"form-group\">\n          <label for=\"formGroupNomMal\" style=\"font-size: x-large;\">Nom de maladie</label>\n          <input [(ngModel)]=\"maladies.nomMaladie\" name=\"nomMaladie\" type=\"text\" class=\"form-control\" id=\"formGroupNomMal\" placeholder=\"Entrer le nom de la maladie\">\n      </div>\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les symptomes</label>\n          <textarea [(ngModel)]=\"maladies.symptomes\" name=\"symptomes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les symptomes\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les causes</label>\n          <textarea [(ngModel)]=\"maladies.causes\" name=\"causes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les causes\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Le traitement</label>\n          <textarea [(ngModel)]=\"maladies.traitement\" name=\"traitement\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer le traitement\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les actions préventives</label>\n          <textarea [(ngModel)]=\"maladies.actionsPreventives\" name=\"actionsPreventives\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les actions préventives\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <button class=\"btn btn-info\" type=\"submit\"><i class=\"fas fa-edit\"> Update</i></button>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { Router } from '@angular/router';\nimport { Console } from 'console';\n\n/**\n * Component\n */\n@Component({\n  selector: 'app-list-maladie-plant',\n  templateUrl: './list-maladie-plant.component.html',\n  styleUrls: ['./list-maladie-plant.component.css']\n})\nexport class ListMaladiePlantComponent implements OnInit {\n\n  /**\n   * Maladies  of list maladie plant component\n   */\n\n  maladies : MaladiePlante[] ;\n\n  /**\n   * Creates an instance of list maladie plant component.\n   * @param maladieService\n   * @param router\n   */\n  constructor(private maladieService:MaladiesService,\n              private router: Router) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.getMaladies();\n  }\n\n  /**\n   * Gets maladies\n   */\n  getMaladies() {\n    this.maladieService.findAll().subscribe(maladies => this.maladies = maladies )\n  }\n\n  /**\n   * Adds list maladie plant component\n   */\n  add() {\n    this.router.navigate(['/add-maladies']);\n  }\n\n  /**\n   * Delete maladie\n   * @param id\n   */\n  deleteMaladie(id){\n    if(confirm(\"Are you sure to delete this maladiePlante\")){\n      this.maladieService.delete(id).subscribe(()=>{\n        this.maladies = this.maladies.filter(maladie => maladie.idMaladiePlante != id);\n      })\n    }\n  }\n\n  editMaladie(id){\n    this.router.navigate(['edit/maladie', id]);\n  }\n\n  /**\n   * Gets by id\n   * @param id\n   */\n  getById(idMld: number) {\n    this.router.navigate(['/info/maladie',idMld]);\n    console.log(\"id is => \", idMld)\n  }\n\n  /**\n   * Searchs by name\n   */\n  searchByName(query) {\n    console.log(\"ok\")\n  }\n}\n","<div class=\"content\">\n    <div class=\"p-4\">\n        <div class=\"row\">\n            <h2 class=\"col-md-3  d-md-block d-none p-4\">La liste des maladies plantes</h2>\n            <h2 class=\"d-md-none d-block p-4\">La liste des maladies plantes</h2>\n            <div class=\"col-md-2 d-none d-md-block\"></div>\n            <div class=\"col-md-2 d-none d-md-block\"></div>\n            <div class=\"col-md-2 d-none d-md-block\"></div>\n            <div class=\"col-md-3 text-right\">\n                <button class=\"btn\" (click)=\"add()\">\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> <span class=\"badge badge-primary\"></span>\n                </button>\n            </div>\n        </div>\n        <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" id=\"myInput\" placeholder=\"Recherche par noms..\" title=\"Type in a name\">\n        </div>\n        <ul *ngFor=\"let maladie of maladies\" class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n                <span class=\"item_name\">{{maladie.nomMaladie}}</span>\n                <a (click)=\"deleteMaladie(maladie.idMaladiePlante)\"><i class=\"fas fa-trash-alt item_delete\"></i></a>\n                <a (click)=\"editMaladie(maladie.idMaladiePlante)\"><i class=\"fas fa-pen item_edit\"></i></a>\n            </li>\n        </ul>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { TokenStorageService } from './token-storage.service';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgriculAuthGuardService implements CanActivate{\n\n  constructor(private route:Router, private authStorage:TokenStorageService,private toastr: ToastrService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, \n              state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree{\n    if((this.authStorage.getUser()== null) || (this.authStorage.getUserType() !== 'AGRICULTURE')){\n      this.route.navigate([\"login\"],{queryParams:{retUrl:state.url}});\n      this.toastr.error(\"Vous devez être connecté\");\n      return false;\n    }else{\n      return true;\n    }\n  }\n}\n","import { Injectable, Output, EventEmitter} from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst AGRICULTURE_API = AUTH_API + 'agriculture/';\nconst EXPERT_API = AUTH_API + 'expert/';\nconst ADMIN_API = AUTH_API + 'admin/';\nconst AUTH_user = AUTH_API + 'user'\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  @Output() getLoggedInUser: EventEmitter<User> = new EventEmitter();\n\n  constructor(private http:HttpClient) { }\n\n  login(credentials, api:string): Observable<User> {\n    console.log(\"username: \" + credentials.username + \" password: \" + credentials.password );\n    return this.http.post<User>(api + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user, api:string):Observable<any> {\n    return this.http.post(api + 'signup', {\n      firstname:user.firstname,\n      lastname:user.lastname,\n      email: user.email,\n      username: user.username,\n      password: user.password\n    }, httpOptions);\n  }\n\n  agricultureLogin(credentials): Observable<User> {\n    return this.login(credentials, AGRICULTURE_API);\n  }\n\n  agricultureRegister(user): Observable<any>{\n    return this.register(user, AGRICULTURE_API);\n  }\n\n  expertLogin(credentials): Observable<User> {\n    return this.login(credentials, EXPERT_API);\n  }\n\n  expertRegister(user): Observable<any> {\n    return this.register(user, EXPERT_API);\n  }\n\n  adminLogin(credentials) :Observable<User> {\n    return this.login(credentials, ADMIN_API);\n  }\n\n  adminRegister(user) :Observable<any> {\n    return this.register(user, ADMIN_API);\n  }\n\n  getCurrentUser() :Observable<User> {\n    return this.http.get<User>(AUTH_user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { TokenStorageService } from './token-storage.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpertAuthGuardService {\n\n  constructor(private route:Router, private authStorage:TokenStorageService,private toastr: ToastrService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree{\n      if((this.authStorage.getUser()== null) || (this.authStorage.getUserType() !== 'EXPERT')){\n      this.route.navigate([\"login\"],{queryParams:{retUrl:state.url}});\n      this.toastr.error(\"Vous devez être connecté\");\n      return false;\n      }else{\n      return true;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Image } from '../models/images';\nimport { Observable } from 'rxjs';\n\n\nconst API_URL = 'http://localhost:8080/api/img/';\n\n/**\n * Injectable\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  /**\n   * Images  of images service\n   */\n  images : Image;\n\n  /**\n   * Creates an instance of images service.\n   * @param http \n   */\n  constructor(private http:HttpClient) { }\n\n  /**\n   * Finds all the images\n   * @returns all \n   */\n  findAll() : Observable<Image>  {\n    return this.http.get<Image>(API_URL + 'images');\n  }\n\n  /**\n   * Finds all the images that are not trait \n   * @returns all non trit \n   */\n  findAllNonTrit() : Observable<Image> {\n    return this.http.get<Image>(API_URL + 'images/nontraiter');\n  }\n\n  /**\n   * Finds all the images that are trait\n   * @returns all trit \n   */\n  findAllTrit() : Observable<Image> {\n    return this.http.get<Image>(API_URL + 'images/traiter');\n  }\n\n  /**\n   * Finds by id\n   * @param id \n   * @returns by id \n   */\n  findByID(id: number) : Observable<Image> {\n    return this.http.get<Image>(API_URL + 'images/' + id)\n  }\n\n\n  /**\n   * Deletes by id\n   * @param id \n   * @returns by id \n   */\n  deleteById(id: number) : Observable<Image> {\n    return this.http.delete<Image>(API_URL + 'images/' + id);\n  }\n\n  /**\n   * Updates by id\n   * @param image \n   * @returns by id \n   */\n  updateById(image: Image) : Observable<Image> {\n    return this.http.put<Image>(API_URL + 'images/' + image.id, image);\n  }\n\n\n  /**\n   * Add response to user\n   * @param image \n   * @returns resp \n   */\n  addResp(image: Image) : Observable<Image>  {\n    return this.http.put<Image>(API_URL + 'donneravis/'+image.id , image);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MaladiePlante } from '../models/maladies-plant';\nimport { Observable } from 'rxjs';\n\nconst API_URL = 'http://localhost:8080/api/mld';\n\n\n/**\n * Injectable\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaladiesService {\n\n\n  /**\n   * Maladies  of maladies service\n   */\n  maladies : MaladiePlante;\n\n  /**\n   * Creates an instance of maladies service.\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Adds one\n   * @param maladie\n   * @returns one\n   */\n  addOne(maladie: MaladiePlante): Observable<MaladiePlante> {\n    return this.http.post<MaladiePlante>(`${API_URL}`, maladie);\n  }\n\n  /**\n   * Finds all\n   * @returns all\n   */\n  findAll(): Observable<MaladiePlante[]> {\n    return this.http.get<MaladiePlante[]>(`${API_URL}`);\n  }\n\n  /**\n   * Finds by id\n   * @param id\n   * @returns by id\n   */\n  findById(id: number): Observable<MaladiePlante> {\n    return this.http.get<MaladiePlante>(`${API_URL}/${id}`);\n  }\n\n  /**\n   * Deletes maladies service\n   * @param id\n   * @returns delete\n   */\n  delete(id: number): Observable<MaladiePlante> {\n    return this.http.delete<MaladiePlante>(`${API_URL}/${id}`)\n  }\n\n  /**\n   * Updates maladies service\n   * @param maladie\n   * @returns update\n   */\n  update(maladie: MaladiePlante ): Observable<MaladiePlante> {\n    return this.http.put<MaladiePlante>(`${API_URL}/ ${maladie.idMaladiePlante}`, maladie)\n  }\n\n  search(maladie: MaladiePlante): Observable<MaladiePlante>{\n    return this.http.get<MaladiePlante>(`${API_URL}/nomMLD${maladie}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nconst USER_TYPE = 'user-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUserType(userType:string){\n    console.log(\"saving in storage \" + USER_TYPE + \":\" + userType)\n\n    localStorage.removeItem(USER_TYPE);\n    localStorage.setItem(USER_TYPE, userType);\n  }\n\n  public getUserType(): string {\n    return localStorage.getItem(USER_TYPE);\n  }\n\n  public saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser() {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}