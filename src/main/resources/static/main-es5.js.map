{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/PopUp/traiter-imgage/traiter-imgage.component.ts","webpack:///src/app/PopUp/validate-upload/validate-upload.component.ts","webpack:///src/app/PopUp/validate-upload/validate-upload.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/navigation/navigation.component.ts","webpack:///src/app/layout/navigation/navigation.component.html","webpack:///src/app/models/images.ts","webpack:///src/app/models/maladies-plant.ts","webpack:///src/app/pages/agriculture/agricul-login/agricul-login.component.ts","webpack:///src/app/pages/agriculture/agricul-login/agricul-login.component.html","webpack:///src/app/pages/agriculture/agricul-profile/agricul-profile.component.ts","webpack:///src/app/pages/agriculture/agricul-profile/agricul-profile.component.html","webpack:///src/app/pages/agriculture/agricul-signup/agricul-signup.component.ts","webpack:///src/app/pages/agriculture/agricul-signup/agricul-signup.component.html","webpack:///src/app/pages/agriculture/consulter-expert/consulter-expert.component.ts","webpack:///src/app/pages/agriculture/consulter-expert/consulter-expert.component.html","webpack:///src/app/pages/agriculture/detection-auto/detection-auto.component.ts","webpack:///src/app/pages/agriculture/detection-auto/detection-auto.component.html","webpack:///src/app/pages/agriculture/response-expert/response-expert.component.ts","webpack:///src/app/pages/agriculture/response-expert/response-expert.component.html","webpack:///src/app/pages/expert/expert-login/expert-login.component.ts","webpack:///src/app/pages/expert/expert-login/expert-login.component.html","webpack:///src/app/pages/expert/expert-pofile/expert-pofile.component.ts","webpack:///src/app/pages/expert/expert-pofile/expert-pofile.component.html","webpack:///src/app/pages/expert/expert-signup/expert-signup.component.ts","webpack:///src/app/pages/expert/expert-signup/expert-signup.component.html","webpack:///src/app/pages/expert/list-img/list-img.component.ts","webpack:///src/app/pages/expert/list-img/list-img.component.html","webpack:///src/app/pages/expert/treatment/treatment.component.ts","webpack:///src/app/pages/expert/treatment/treatment.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component.ts","webpack:///src/app/pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component.html","webpack:///src/app/pages/maladiesPlant/info-maladies/info-maladies.component.ts","webpack:///src/app/pages/maladiesPlant/info-maladies/info-maladies.component.html","webpack:///src/app/pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component.ts","webpack:///src/app/pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component.html","webpack:///src/app/services/agricul-auth-guard.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/expert-auth-guard.service.ts","webpack:///src/app/services/images.service.ts","webpack:///src/app/services/maladies.service.ts","webpack:///src/app/services/token-storage.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","TraiterImgageComponent","form","selector","templateUrl","styleUrls","ValidateUploadComponent","activeModal","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","tokenStorageService","title","isLoggedIn","showAdminBoard","showExpertBoard","getToken","user","getUser","username","signOut","window","location","reload","AppModule","positionClass","declarations","providers","bootstrap","FooterComponent","ADMIN","EXPERT","AGRICULTURE","NavigationComponent","router","authService","isMenuCollapsed","showAgricultureBoard","getLoggedInUser","subscribe","updateNavBar","userType","getUserType","roles","navigate","console","log","loggedInUser","Image","MaladiePlante","AgriculLoginComponent","tokenStorage","toastr","isLoginFailed","errorMessage","agricultureLogin","saveToken","accessToken","saveUser","saveUserType","success","reloadPage","err","error","message","AgriculProfileComponent","AgriculSignupComponent","isSuccessful","isSignUpFailed","agricultureRegister","data","navigateByUrl","ConsulterExpertComponent","http","API_URL","progress","event","selectedFile","target","files","fd","FormData","append","name","post","reportProgress","observe","type","UploadProgress","Math","round","loaded","total","Response","setTimeout","successNot","errorNot","progressAnimation","onFileSelected","onUpload","DetectionAutoComponent","ResponseExpertComponent","imagesService","getImagesTrit","findAllTrit","images","JSON","stringify","ExpertLoginComponent","expertLogin","ExpertPofileComponent","ExpertSignupComponent","ListImgComponent","imagesServices","getImages","findAllNonTrit","imgId","TreatmentComponent","route","maladieService","selectedMaladie","params","findByID","image","undefined","getMaladies","findAll","maladiePlantes","img","addResp","reset","HomeComponent","AddMaladiePlantComponent","modalService","maladies","nomMaladie","symptomes","causes","traitement","actionsPreventives","addOne","maladie","addMaladie","open","InfoMaladiesComponent","maladiesService","mldId","findById","f","update","ListMaladiePlantComponent","confirm","filter","idMaladiePlante","idMld","query","add","AgriculAuthGuardService","authStorage","next","state","queryParams","retUrl","url","providedIn","AUTH_API","AGRICULTURE_API","EXPERT_API","ADMIN_API","AUTH_user","httpOptions","headers","AuthenticationService","credentials","api","password","firstname","lastname","email","login","register","get","ExpertAuthGuardService","ImagesService","put","MaladiesService","TOKEN_KEY","USER_KEY","USER_TYPE","TokenStorageService","sessionStorage","clear","token","removeItem","setItem","getItem","localStorage","parse","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-traiter-imgage',\n  templateUrl: './traiter-imgage.component.html',\n  styleUrls: ['./traiter-imgage.component.css']\n})\nexport class TraiterImgageComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onValid(form:NgForm) {\n\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * Component\n */\n@Component({\n  selector: 'app-validate-upload',\n  templateUrl: './validate-upload.component.html',\n  styleUrls: ['./validate-upload.component.css']\n})\nexport class ValidateUploadComponent implements OnInit {\n\n  /**\n   * Input  of validate upload component\n   */\n  @Input() msg;\n  /**\n   * Creates an instance of validate upload component.\n   * @param activeModal \n   */\n  constructor(public activeModal:NgbActiveModal) { }\n\n  \n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<div class=\"modal-header\">\n    <h2 class=\"modal-title\">DiagnoPlant <i class=\"fas fa-leaf\" style=\"color:green\"></i></h2>\n    <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button> -->\n</div>\n<div class=\"modal-body\">\n  <p>{{msg}}!</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetectionAutoComponent } from './pages/agriculture/detection-auto/detection-auto.component';\nimport { AddMaladiePlantComponent } from './pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component';\nimport { ListMaladiePlantComponent } from './pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component';\nimport { InfoMaladiesComponent } from './pages/maladiesPlant/info-maladies/info-maladies.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ConsulterExpertComponent } from './pages/agriculture/consulter-expert/consulter-expert.component';\nimport { ListImgComponent } from './pages/expert/list-img/list-img.component';\nimport { ResponseExpertComponent } from './pages/agriculture/response-expert/response-expert.component';\nimport { TreatmentComponent } from './pages/expert/treatment/treatment.component';\nimport { AgriculLoginComponent } from './pages/agriculture/agricul-login/agricul-login.component';\nimport { AgriculSignupComponent } from './pages/agriculture/agricul-signup/agricul-signup.component';\nimport { AgriculAuthGuardService } from './services/agricul-auth-guard.service';\nimport { ExpertAuthGuardService } from './services/expert-auth-guard.service';\nimport { ExpertLoginComponent } from './pages/expert/expert-login/expert-login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo:'home',\n    pathMatch:'full'\n  },\n  {\n    path: 'home',\n    component:HomeComponent\n  },\n  {\n    path: 'login',\n    component: AgriculLoginComponent\n  },\n  {\n    path:'register',\n    component: AgriculSignupComponent\n  },\n  {\n    path: 'login/expert',\n    component: ExpertLoginComponent\n  },\n  {\n    path:'detect-auto',\n    component: DetectionAutoComponent, canActivate:[AgriculAuthGuardService]\n  },\n  {\n    path: 'consulter',\n    component: ConsulterExpertComponent, canActivate:[AgriculAuthGuardService]\n  },\n  {\n    path: 'espace-expert',\n    component: ListImgComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'espace-response/image/:id',\n    component: TreatmentComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path:'add-maladies',\n    component: AddMaladiePlantComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'listeMaladies',\n    component: ListMaladiePlantComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'edit/maladie/:id',\n    component: InfoMaladiesComponent, canActivate: [ExpertAuthGuardService]\n  },\n  {\n    path: 'allresponse',\n    component: ResponseExpertComponent, canActivate:[AgriculAuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'smartFerming';\n\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showExpertBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService:TokenStorageService){}\n\n  ngOnInit(): void  {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n\n    if(this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      // this.roles = user.roles;\n\n      // this.showAdminBoard = this.roles.includes('ROLE_AMIN');\n      // this.showExpertBoard = this.roles.includes('ROLE_EXPERT');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(){\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<div>\n    <app-navigation></app-navigation>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './layout/navigation/navigation.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DetectionAutoComponent } from './pages/agriculture/detection-auto/detection-auto.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ValidateUploadComponent } from './PopUp/validate-upload/validate-upload.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AddMaladiePlantComponent } from './pages/maladiesPlant/add-maladie-plant/add-maladie-plant.component';\nimport { ListMaladiePlantComponent } from './pages/maladiesPlant/list-maladie-plant/list-maladie-plant.component';\nimport { InfoMaladiesComponent } from './pages/maladiesPlant/info-maladies/info-maladies.component';\nimport { TraiterImgageComponent } from './PopUp/traiter-imgage/traiter-imgage.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ConsulterExpertComponent } from './pages/agriculture/consulter-expert/consulter-expert.component';\nimport { ExpertLoginComponent } from './pages/expert/expert-login/expert-login.component';\nimport { ExpertSignupComponent } from './pages/expert/expert-signup/expert-signup.component';\nimport { ExpertPofileComponent } from './pages/expert/expert-pofile/expert-pofile.component';\nimport { ListImgComponent } from './pages/expert/list-img/list-img.component';\nimport { AgriculLoginComponent } from './pages/agriculture/agricul-login/agricul-login.component';\nimport { AgriculSignupComponent } from './pages/agriculture/agricul-signup/agricul-signup.component';\nimport { AgriculProfileComponent } from './pages/agriculture/agricul-profile/agricul-profile.component';\nimport { ResponseExpertComponent } from './pages/agriculture/response-expert/response-expert.component';\nimport { TreatmentComponent } from './pages/expert/treatment/treatment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    DetectionAutoComponent,\n    ValidateUploadComponent,\n    AddMaladiePlantComponent,\n    ListMaladiePlantComponent,\n    InfoMaladiesComponent,\n    TraiterImgageComponent,\n    FooterComponent,\n    HomeComponent,\n    ConsulterExpertComponent,\n    ExpertLoginComponent,\n    ExpertSignupComponent,\n    ExpertPofileComponent,\n    ListImgComponent,\n    AgriculLoginComponent,\n    AgriculSignupComponent,\n    AgriculProfileComponent,\n    ResponseExpertComponent,\n    TreatmentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgbModule,\n    FlexLayoutModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-top-center'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"card-footer font-small\" style=\"background-color: rgb(202, 202, 202);\">\n\n  <div style=\"background-color: #4dd14d;\">\n    <div class=\"container\">\n\n      <!-- Grid row-->\n      <div class=\"row py-4 d-flex align-items-center\">\n\n        <!-- Grid column -->\n        <div class=\"col-md-6 col-lg-5 text-center text-md-left mb-4 mb-md-0\">\n          <h6 class=\"mb-0\">Get connected with us on social networks!</h6>\n        </div>\n        <!-- Grid column -->\n\n        <!-- Grid column -->\n        <div class=\"col-md-6 col-lg-7 text-center text-md-right\">\n\n          <!-- Facebook -->\n          <a class=\"fb-ic\">\n            <i class=\"fab fa-facebook-f white-text mr-4\"> </i>\n          </a>\n          <!-- Twitter -->\n          <a class=\"tw-ic\">\n            <i class=\"fab fa-twitter white-text mr-4\"> </i>\n          </a>\n          <!-- Google +-->\n          <a class=\"gplus-ic\">\n            <i class=\"fab fa-google-plus-g white-text mr-4\"> </i>\n          </a>\n          <!--Linkedin -->\n          <a class=\"li-ic\">\n            <i class=\"fab fa-linkedin-in white-text mr-4\"> </i>\n          </a>\n          <!--Instagram-->\n          <a class=\"ins-ic\">\n            <i class=\"fab fa-instagram white-text\"> </i>\n          </a>\n\n        </div>\n        <!-- Grid column -->\n\n      </div>\n      <!-- Grid row-->\n\n    </div>\n  </div>\n\n  <!-- Footer Links -->\n  <div class=\"container text-center text-md-left mt-5\">\n\n    <!-- Grid row -->\n    <div class=\"row mt-3\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n\n        <!-- Content -->\n        <h6 class=\"text-uppercase font-weight-bold\">DiagnoPlant</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\n          consectetur\n          adipisicing elit.\n        </p>\n\n      </div>\n      <!-- Grid column -->\n\n      <!-- Grid column -->\n      <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\">Products</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          <a href=\"#!\">MDBootstrap</a>\n        </p>\n        <p>\n          <a href=\"#!\">MDWordPress</a>\n        </p>\n        <p>\n          <a href=\"#!\">BrandFlow</a>\n        </p>\n        <p>\n          <a href=\"#!\">Bootstrap Angular</a>\n        </p>\n\n      </div>\n      <!-- Grid column -->\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\">Useful links</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          <a href=\"#!\">Your Account</a>\n        </p>\n        <p>\n          <a href=\"#!\">Become an Affiliate</a>\n        </p>\n        <p>\n          <a href=\"#!\">Shipping Rates</a>\n        </p>\n        <p>\n          <a href=\"#!\">Help</a>\n        </p>\n\n      </div>\n      <!-- Grid column -->\n\n      <!-- Grid column -->\n      <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n\n        <!-- Links -->\n        <h6 class=\"text-uppercase font-weight-bold\">Contact</h6>\n        <hr class=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style=\"width: 60px;\">\n        <p>\n          <i class=\"fas fa-home mr-3\"></i> Ait Melloul, 80160, MAROC</p>\n        <p>\n          <i class=\"fas fa-envelope mr-3\"></i> info@diagnoplant.com</p>\n        <p>\n          <i class=\"fas fa-phone mr-3\"></i> + 01 234 567 88</p>\n        <p>\n          <i class=\"fas fa-print mr-3\"></i> + 01 234 567 89</p>\n\n      </div>\n      <!-- Grid column -->\n\n    </div>\n    <!-- Grid row -->\n\n  </div>\n  <!-- Footer Links -->\n\n  <!-- Copyright -->\n  <div class=\"text-center py-3\" style=\"background-color: darkgray;\">© 2020 Copyright:\n    <a href=\"https://ZkitiDev.com/\"> ZkitiDev.com</a>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { User } from 'src/app/models/user';\n\nconst ADMIN = 'ADMIN';\nconst EXPERT = 'EXPERT';\nconst AGRICULTURE = 'AGRICULTURE';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  public isMenuCollapsed = true;\n\n  private roles: string[]; \n  isLoggedIn = false;\n  showAdminBoard = false;\n  showExpertBoard = false;\n  showAgricultureBoard = false;\n  username: string;\n  loggedInUser:any;\n\n  constructor(private router:Router,\n              private tokenStorageService:TokenStorageService,\n              private authService:AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n    this.authService.getLoggedInUser.subscribe((user:User)=> {\n      this.updateNavBar(user);\n    });\n\n    if(this.isLoggedIn){\n      const user = this.tokenStorageService.getUser();\n      const userType = this.tokenStorageService.getUserType();\n\n      this.roles = user.roles;\n\n      this.showExpertBoard = userType == EXPERT;\n      this.showAgricultureBoard = userType == AGRICULTURE;\n      this.showAdminBoard = userType == ADMIN;\n\n      this.username = user.username;\n    }\n  }\n\n  onLogout() {\n    this.tokenStorageService.signOut();\n    this.router.navigate(['/login']).then(()=> {\n      window.location.reload();\n    });\n  }\n\n  updateNavBar(user:User) {\n    console.log(\"LoggerInUser \", user);\n      this.isLoggedIn = true;\n      this.loggedInUser = user;\n      console.log(\"Logged in user : \", this.loggedInUser);\n      this.showExpertBoard = user.userType == EXPERT;\n      console.log(\"showExpertBoard\");\n      console.log(this.showExpertBoard);\n      this.showAgricultureBoard = user.userType == AGRICULTURE;\n      console.log(\"showAgricultureBoard\");\n      console.log(this.showAgricultureBoard);\n      this.showAdminBoard = user.userType == ADMIN;\n      console.log(\"showAdminBoard\");\n      console.log(this.showAdminBoard);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-success\">\n    <a class=\"navbar-brand\" [routerLink]=\"['']\" routerLinkActive=\"router-link-active\" >DiagnoPlant</a>\n    <button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i class=\"fas fa-bars\"></i>\n    </button>\n\n    <!--home-->\n    <div *ngIf=\"!showAgricultureBoard && !showExpertBoard && !showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >About</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >Blog</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" >Contact</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success my-2 my-sm-0\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" >Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n        <button class=\"btn btn-success my-2 my-sm-0\" [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\" >Signup <i class=\"fa fa-sign-out\"></i></button>\n    </div>\n\n    <!--agriculture-->\n    <div *ngIf=\"showAgricultureBoard && !showExpertBoard && !showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/detect-auto']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/consulter']\" routerLinkActive=\"router-link-active\" >Consulter l'expert</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/allresponse']\" routerLinkActive=\"router-link-active\" >avis expert</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success my-2 my-sm-0\" (click)=\"onLogout()\">LogOut <i class=\"fas fa-sign-out-alt\"></i></button>\n    </div>\n    \n    <!--expert-->\n    <div *ngIf=\"!showAgricultureBoard && showExpertBoard && !showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/espace-expert']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/listeMaladies']\" routerLinkActive=\"router-link-active\" >Consulter les fiches des maladies</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/add-maladies']\" routerLinkActive=\"router-link-active\" >Ajouter une nouvelle maladie</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success mr-2 my-2 my-sm-0\" (click)=\"onLogout()\">LogOut <i class=\"fas fa-sign-out-alt\"></i></button>\n    </div>\n    \n    <!--admin-->\n    <div *ngIf=\"!showAgricultureBoard && !showExpertBoard && showAdminBoard\" class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n        <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/espace-expert']\" routerLinkActive=\"router-link-active\" >Home</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/agriculture']\" routerLinkActive=\"router-link-active\" >Espace agriculture</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/expert']\" routerLinkActive=\"router-link-active\" >Espace expert</a>\n            </li>\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-success\" [routerLink]=\"['/dashboard']\" routerLinkActive=\"router-link-active\" >Dashboard</a>\n            </li>\n        </ul>\n        <button class=\"btn btn-success mr-2 my-2 my-sm-0\" (click)=\"onLogout()\">LogOut <i class=\"fas fa-sign-out-alt\"></i></button>\n    </div>\n</nav>\n","import { MaladiePlante } from './maladies-plant';\n\nexport class Image {\n    id ?: number;\n    image: string;\n    etatTraitement: boolean;\n    urlImage: string;\n    infosCompl: string;\n    maladiePlante : MaladiePlante;  \n\n}\n","export  class MaladiePlante {\n    idMaladiePlante ?: number;\n    nomMaladie : string;\n    symptomes : string;\n    causes : string;\n    traitement : string;\n    actionsPreventives : string\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-agricul-login',\n  templateUrl: './agricul-login.component.html',\n  styleUrls: ['./agricul-login.component.css']\n})\nexport class AgriculLoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService:AuthenticationService,\n              private tokenStorage: TokenStorageService,\n              private router:Router,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onlogin(){\n    this.authService.agricultureLogin(this.form).subscribe(\n      (user:User) => {\n        console.log(user);\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        console.log(\"login successful\");\n        this.toastr.success(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        this.reloadPage();\n\n      },\n      err => {\n        console.log(err);\n        this.errorMessage = err.error.message;\n        this.toastr.error(\"Login failed\");\n        this.isLoginFailed = true;\n      }\n    )\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n}\n","\n<div class=\"content\">\n  <div class=\"container p-4\">\n    <form class=\"p-5\" *ngIf=\"!isLoggedIn\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onlogin()\" novalidate>\n      <div class=\"form-group\">\n        <div style=\"text-align: right;\">\n          <a [routerLink]=\"['/login/expert']\" routerLinkActive=\"router-link-active\" ><label for=\"expert\">Login as Expert</label></a>\n        </div>\n        <label class=\"control-label\">User name</label>\n        <input type=\"text\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\" class=\"form-control\" aria-describedby=\"User name\">\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n          Username is required!\n        </div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label class=\"control-label\">Password</label>\n        <input type=\"password\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\" class=\"form-control\">\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\" >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"Check\">\n        <label class=\"form-check-label\" for=\"Check\">Check me out</label>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n    </form>\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      Logged in as {{ roles }}.\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-agricul-profile',\n  templateUrl: './agricul-profile.component.html',\n  styleUrls: ['./agricul-profile.component.css']\n})\nexport class AgriculProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>agricul-profile works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-agricul-signup',\n  templateUrl: './agricul-signup.component.html',\n  styleUrls: ['./agricul-signup.component.css']\n})\nexport class AgriculSignupComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService:AuthenticationService,\n              private router:Router,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.authService.agricultureRegister(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n        this.toastr.success(\"Your registration is successful!\");\n        this.router.navigateByUrl('login')\n      },\n      err => {\n        console.log(err)\n        this.errorMessage = err.error.message;\n        this.toastr.error(\"Signup failed!\");\n        this.isSignUpFailed = true;\n      }\n    )\n  }\n}\n","<div class=\"content\">\n  <div class=\"container p-4\">\n\n    <!-- <div class=\"text-center pt-4\">\n      <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"rounded-circle\"/>\n    </div> -->\n    <form class=\"p-4\" *ngIf=\"!isSuccessful\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit()\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"control-label\">First name</label>\n        <input type=\"text\" class=\"form-control\" name=\"firstname\" [(ngModel)]=\"form.firstname\" #firstname=\"ngModel\" minlength=\"3\" maxlength=\"15\" aria-describedby=\"first name\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && firstname.invalid\">\n          <div *ngIf=\"firstname.errors.required\">Firstname is required</div>\n          <div *ngIf=\"firstname.errors.minlength\">\n            Firstname must be at least 3 characters\n          </div>\n          <div *ngIf=\"firstname.errors.maxlength\">\n            Firstname must be at most 15 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"control-label\">Last name</label>\n        <input type=\"text\" class=\"form-control\" name=\"lastname\" [(ngModel)]=\"form.lastname\" minlength=\"3\" maxlength=\"15\" #lastname=\"ngModel\" aria-describedby=\"last name\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && lastname.invalid\">\n            <div *ngIf=\"lastname.errors.required\">LastName is required</div>\n            <div *ngIf=\"lastname.errors.minlength\">\n              LastName must be at least 3 characters\n            </div>\n            <div *ngIf=\"lastname.errors.maxlength\">\n              LastName must be at most 15 characters\n            </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"control-label\">Email</label>\n        <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"form.email\" required email #email=\"ngModel\" aria-describedby=\"email\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"control-label\">User name</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" required minlength=\"3\" maxlength=\"20\" #username=\"ngModel\" aria-describedby=\"agriculture name\">\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"control-label\">Password</label>\n        <input type=\"password\" name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\" #password=\"ngModel\" class=\"form-control\" >\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-consulter-expert',\n  templateUrl: './consulter-expert.component.html',\n  styleUrls: ['./consulter-expert.component.css']\n})\nexport class ConsulterExpertComponent implements OnInit {\n\n  /**\n   * Url  of expert component\n   */\n  API_URL = 'http://localhost:8080/api/img/';\n\n  /**\n   * Selected file of expert component\n   */\n  selectedFile : File ;\n  errorMessage = '';\n  progress: number = 0;\n\n  /**\n   * Creates an instance of expert component.\n   * @param http\n   */\n  constructor(private http:HttpClient,\n              // private modalService: NgbModal,\n              private toastr: ToastrService) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Determines whether file selected on\n   * @param event\n   */\n  onFileSelected(event) {\n    this.selectedFile = <File>event.target.files[0];\n    console.log(event);\n  }\n\n  /**\n   * Determines whether upload on\n   */\n  onUpload(){\n    const fd = new FormData();\n    fd.append('file', this.selectedFile, this.selectedFile.name)\n    this.http.post(this.API_URL + 'telechargerimage', fd, {\n      reportProgress:true,\n      observe:'events'\n    })\n    .subscribe(\n      event => {\n        if(event.type === HttpEventType.UploadProgress){\n          this.progress = Math.round(event.loaded/event.total * 100);\n          console.log('Upload Progress: '+ Math.round(event.loaded / event.total * 100) + '%')\n        }else if (event.type === HttpEventType.Response){\n          setTimeout(() => {\n            this.progress = 0;\n          }, 1500);\n          console.log(event);\n          this.successNot();\n        }\n      },\n\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.errorNot();\n      }\n    );\n  }\n\n\n  /**\n   * Success notifications\n   */\n  successNot(){\n    this.toastr.success('Votre image a bien été enregistrée!', 'Upload msg', {\n      progressAnimation: 'increasing'\n    });\n  }\n\n  /**\n   * Errors notifications\n   */\n  errorNot(){\n    this.toastr.error('veuillez sélectionner une image !');\n  }\n\n\n}\n","<div class=\"body\">\n\n    <header class=\"text-white text-center\">\n        <h1 class=\"p-4\">Diagno Plant</h1>\n        <p class=\"lead mb-5\">Bienvenue zkiti lahcen, Veuillez télécharger une image de votre plant de tomate pour l'envoyer à l'expert</p>\n        <img src=\"https://www.icone-png.com/png/41/41466.png\" alt=\"\" width=\"150\" class=\"mb-4\">\n    </header>\n\n    <div class=\"row py-4\">\n        <div class=\"col-lg-6 mx-auto\">\n            <div class=\"input-group mb-3 px-2 py-2 rounded-pill bg-white shadow-sm\">\n                <input id=\"upload\" type=\"file\" name=\"file\" class=\"form-control border-0\" (change)=\"onFileSelected($event)\" value=\"0\">\n                <label id=\"upload-label\" for=\"upload\" class=\"font-weight-light\">choisissez l'image</label>\n                <div class=\"input-group-append\">\n                    <label for=\"upload\" class=\"btn btn-light m-0 rounded-pill px-4\"> <i class=\"fa fa-cloud-upload mr-2 text-muted\"></i><small class=\"text-uppercase font-weight-bold text-muted\">choisissez l'image</small></label>\n                </div>\n            </div>\n            <div class=\"mb-3 px-2 py-2 text-center\">\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"onUpload()\">Upload image</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Component\n */\n@Component({\n  selector: 'app-detection-auto',\n  templateUrl: './detection-auto.component.html',\n  styleUrls: ['./detection-auto.component.css']\n})\nexport class DetectionAutoComponent implements OnInit {\n\n  /**\n   * Selected file of detection auto component\n   */\n  selectedFile : File ;\n\n  /**\n   * Creates an instance of detection auto component.\n   * @param http \n   */\n  constructor(private http:HttpClient) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Determines whether file selected on\n   * @param event \n   */\n  onFileSelected(event) {\n    this.selectedFile = <File>event.target.files[0];\n    console.log(event);\n  }\n\n  /**\n   * Determines whether upload on\n   */\n  onUpload(){\n  }\n\n  \n\n}\n","<div class=\"body\">\n\n    <header class=\"text-white text-center\">\n        <h1 class=\"p-4\">Diagno Plant</h1>\n        <p class=\"lead mb-5\">Bienvenue zkiti lahcen Veuillez télécharger une image de votre plant de tomate pour détecter la maladie</p>\n        <img src=\"https://www.icone-png.com/png/41/41466.png\" alt=\"\" width=\"150\" class=\"mb-4\">\n    </header>\n\n    <div class=\"row py-4\">\n        <div class=\"col-lg-6 mx-auto\">\n            <div class=\"input-group mb-3 px-2 py-2 rounded-pill bg-white shadow-sm\">\n                <input id=\"upload\" type=\"file\" name=\"file\" class=\"form-control border-0\" (change)=\"onFileSelected($event)\">\n                <label id=\"upload-label\" for=\"upload\" class=\"font-weight-light\">choisissez l'image</label>\n                <div class=\"input-group-append\">\n                    <label for=\"upload\" class=\"btn btn-light m-0 rounded-pill px-4\"> <i class=\"fa fa-cloud-upload mr-2 text-muted\"></i><small class=\"text-uppercase font-weight-bold text-muted\">choisissez l'image</small></label>\n                </div>\n            </div>\n            <div class=\"mb-3 px-2 py-2 text-center\">\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"onUpload()\">Upload image</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/images';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { ImagesService } from 'src/app/services/images.service';\n\n@Component({\n  selector: 'app-response-expert',\n  templateUrl: './response-expert.component.html',\n  styleUrls: ['./response-expert.component.css']\n})\nexport class ResponseExpertComponent implements OnInit {\n\n  images : Image \n  maladiePlantes : MaladiePlante[]\n  constructor(private imagesService:ImagesService) { }\n\n  ngOnInit(): void {\n    this.getImagesTrit();\n  }\n\n  getImagesTrit() {\n    this.imagesService.findAllTrit().subscribe(data => {\n      this.images = data\n      console.log(JSON.stringify(data));\n    })\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"row row-cols-1 row-cols-md-3 p-4\">\n        <div class=\"col mb-4\" *ngFor=\"let image of images\">\n        \n            <div class=\"card h-100\" style=\"background-color: #d7dde8;\">\n                <img src=\"http://localhost:8080/api/img/image/{{image.id}}\"\n                  class=\"card-img-top\" alt=\"\">\n                <div class=\"card-body\">\n                    <h2 class=\"card-title\">Recommandation d'expert</h2>\n                    <!-- <p> {{image | json }}</p> -->\n                        \n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Nom de maladie</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.nomMaladie}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Symptoms</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.symptomes}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Causes</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.causes}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Traitement</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.traitement}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">actionsPreventives</h3>\n                    <p class=\"card-text\">{{image.maladiePlante.actionsPreventives}}</p>\n                    <hr>\n                    <h3 class=\"card-title\" style=\"color: cornflowerblue;\">Informations complementaires</h3>\n                    <p class=\"card-text\">{{image.infosCompl}}</p>\n                    <hr>\n                    <!--Rating-->\n                    <ul class=\"rating mb-1 pb-2\">\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"fas fa-star fa-xs\"></i>\n                        </li>\n                        <li>\n                        <i class=\"far fa-star fa-xs\"></i>\n                        </li>\n                    </ul>\n                    <hr>\n                    <p class=\"card-text\"><small class=\"text-muted\">Last updated 2 mins ago</small></p>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-expert-login',\n  templateUrl: './expert-login.component.html',\n  styleUrls: ['./expert-login.component.css']\n})\nexport class ExpertLoginComponent implements OnInit {\n\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService:AuthenticationService,\n    private tokenStorage: TokenStorageService,\n    private router:Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onlogin(){\n    this.authService.expertLogin(this.form).subscribe(\n      (user:User) => {\n        console.log(user);\n        this.tokenStorage.saveToken(user.accessToken);\n        this.tokenStorage.saveUser(user);\n        this.tokenStorage.saveUserType(user.userType);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        console.log('login successful');\n        this.toastr.success(\"login successful\");\n        console.log(this.tokenStorage.getUser());\n        this.reloadPage();\n      },\n\n      err => {\n        console.log(err);\n        this.errorMessage = err.error.message;\n        this.toastr.error(\"Login failed\");\n        this.isLoginFailed = true;\n        \n      }\n    )\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n\n}\n","\n<div class=\"content\">\n    <div class=\"container p-4\">\n      <form class=\"p-5\" *ngIf=\"!isLoggedIn\" name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onlogin()\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"control-label\">User name</label>\n          <input type=\"text\" name=\"username\" [(ngModel)]=\"form.username\" #username=\"ngModel\" class=\"form-control\" aria-describedby=\"User name\">\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n            Username is required!\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label class=\"control-label\">Password</label>\n          <input type=\"password\" name=\"password\" [(ngModel)]=\"form.password\" #password=\"ngModel\" class=\"form-control\">\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\" >\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"form-group form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"Check\">\n          <label class=\"form-check-label\" for=\"Check\">Check me out</label>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n      </form>\n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expert-pofile',\n  templateUrl: './expert-pofile.component.html',\n  styleUrls: ['./expert-pofile.component.css']\n})\nexport class ExpertPofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expert-pofile works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expert-signup',\n  templateUrl: './expert-signup.component.html',\n  styleUrls: ['./expert-signup.component.css']\n})\nexport class ExpertSignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expert-signup works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/images';\nimport { ImagesService } from 'src/app/services/images.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list-img',\n  templateUrl: './list-img.component.html',\n  styleUrls: ['./list-img.component.css']\n})\nexport class ListImgComponent implements OnInit {\n\n  \n  /**\n   * Images  of espace expert component\n   */\n  images: Image; \n\n  /**\n   * Creates an instance of espace expert component.\n   * @param imagesServices \n   * @param router \n   * @param modalService \n   */\n  constructor(private imagesServices:ImagesService,\n              private router:Router) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.getImages();\n  }\n\n  /**\n   * Gets images\n   */\n  getImages() {\n    this.imagesServices.findAllNonTrit().subscribe(images => {\n      this.images = images\n    })\n  }\n\n  /**\n   * Traits img\n   * @param imgId \n   */\n  traitImg(imgId: number) {\n    // this.modalService.open(TraiterImgageComponent);\n    this.router.navigate(['/espace-response/image', imgId]);\n  }\n\n}","<div class=\"content\">\n    <div class=\"d-flex flex-wrap\">\n        <div class=\"p-4\" *ngFor=\"let image of images\">\n            <div class=\"card\" style=\"width:400px\">\n                <!-- <div class=\"card-header\">\n                    <h4>{{image.image}}<i class=\"fas fa-images\"></i></h4>\n                </div> -->\n                <div class=\"card-body p-4\">\n                    <img class=\"card-img-top\" src=\"http://localhost:8080/api/img/image/{{image.id}}\"  alt=\"\">\n                    <button class=\"btn btn-secondary m-2\" type=\"submit\" (click)=\"traitImg(image.id)\">Traiter l'image</button> \n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Image } from 'src/app/models/images';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ImagesService } from 'src/app/services/images.service';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-treatment',\n  templateUrl: './treatment.component.html',\n  styleUrls: ['./treatment.component.css']\n})\nexport class TreatmentComponent implements OnInit {\n\n\n  images : Image = new Image();\n\n  maladiePlantes: MaladiePlante[] ;\n\n  selectedMaladie: MaladiePlante = new MaladiePlante();\n\n  constructor(private route:ActivatedRoute,\n              private imagesService:ImagesService,\n              private maladieService:MaladiesService,\n              private router:Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(imgId => {\n      console.log(\"image_id is: \",imgId);\n      this.imagesService.findByID(imgId.id).subscribe( image => {\n        this.images = image;\n        console.log(\"get image infos \", JSON.stringify(image));\n        if (image === undefined){\n          console.log(\"can't find image with id: \", imgId);\n          return\n        }\n      });\n\n      this.getMaladies();\n    })\n\n  }\n\n  getMaladies(): any {\n    this.maladieService.findAll().subscribe(data =>{\n      this.maladiePlantes = data;\n      console.log(\"get data of maladies \", JSON.stringify(data));\n\n      if(data === undefined){\n        console.log(\"cant't find data\")\n      }\n    })\n  }\n\n  onValid(img:NgForm) {\n    this.imagesService.addResp(this.images).subscribe(image => {\n      this.images = image;\n      img.reset();\n      this.router.navigate(['espace-expert']);\n      console.log(\"data sent ==>\",JSON.stringify(image));\n    })\n  }\n}\n","<div class=\"content\">\n    <form (ngSubmit)=\"onValid(img)\" *ngIf=\"images\" #img=\"ngForm\"  class=\"justify-content-center p-4\" novalidate>\n        \n        <div class=\"form-group\">\n            <label for=\"images\" style=\"font-size: x-large;\">Nom de maladie</label>\n            <select name=\"imagesMaladiesPlante\" class=\"form-control\" id=\"images\" [(ngModel)]=\"images.maladiePlante\" >\n                <!-- <option value=\"\">Selectionne une maladie</option> -->\n                <option *ngFor=\"let maladiePlante of maladiePlantes\" [ngValue]=\"maladiePlante\">\n                    {{maladiePlante.nomMaladie}}\n                </option>\n            </select>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"infosCompl\" style=\"font-size: x-large;\">Informations complementaires</label>\n            <textarea [(ngModel)]=\"images.infosCompl\"  name=\"infosCompl\" class=\"form-control\" id=\"infosCompl\" rows=\"3\" placeholder=\"Entrer les informations complementaires\"></textarea>\n        </div>\n    \n        <div class=\"form-group\">\n            <button class=\"btn btn-secondary\" type=\"submit\">Valider</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content p-4\">\n  <div class=\"container my-5 py-5 z-depth-1\">\n\n\n    <!--Section: Content-->\n    <section class=\"dark-grey-text text-center\">\n      \n      <h3 class=\"pt-5 pb-2 head-title\">Diagno Plant Your Home</h3>\n\n      <div class=\"row mx-3\">\n        <div class=\"col-md-4 px-4 mb-4\">\n\n          <div class=\"view\">\n            <img src=\"https://mdbootstrap.com/img/illustrations/drawkit-drawing-man-colour.svg\" class=\"img-fluid\" alt=\"smaple image\">\n          </div>\n\n        </div>\n      <div class=\"col-md-4 px-4 mb-4\">\n\n          <div class=\"view\">\n            <img src=\"https://mdbootstrap.com/img/illustrations/drawkit-phone-conversation-colour.svg\" class=\"img-fluid\" alt=\"smaple image\">\n          </div>\n\n        </div>\n        <div class=\"col-md-4 px-4 mb-4\">\n\n          <div class=\"view\">\n            <img src=\"https://mdbootstrap.com/img/illustrations/app-user-colour.svg\" class=\"img-fluid\" alt=\"smaple image\">\n          </div>\n\n        </div>\n      </div>\n\n    </section>\n    <!--Section: Content-->\n\n\n  </div>\n    <div id=\"carouselExampleCaptions\" class=\"carousel slide p-5\" data-ride=\"carousel\">\n        <ol class=\"carousel-indicators\">\n          <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"0\" class=\"active\"></li>\n          <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"1\"></li>\n          <!-- <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"2\"></li> -->\n        </ol>\n        <div class=\"carousel-inner\">\n          <div class=\"carousel-item active\">\n            <img src=\"https://cdn.pixabay.com/photo/2017/03/17/12/47/winegrowing-2151457_960_720.jpg\" class=\"d-block w-100\" alt=\"\">\n            <div class=\"carousel-caption d-none d-md-block\">\n              <h5>First slide label</h5>\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </div>\n          </div>\n          <div class=\"carousel-item\">\n            <img src=\"https://cdn.pixabay.com/photo/2018/06/22/06/13/season-3490072_960_720.jpg\" class=\"d-block w-100\" alt=\"\">\n            <div class=\"carousel-caption d-none d-md-block\">\n              <h5>Third slide label</h5>\n              <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n            </div>\n          </div>\n        </div>\n        <a class=\"carousel-control-prev\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"prev\">\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">Previous</span>\n        </a>\n        <a class=\"carousel-control-next\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"next\">\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">Next</span>\n        </a>\n    </div>\n\n    <div class=\"container my-5 z-depth-1\">\n\n\n      <!--Section: Content-->\n      <section class=\"dark-grey-text p-5\">\n    \n        <!-- Grid row -->\n        <div class=\"row\">\n    \n          <!-- Grid column -->\n          <div class=\"col-md-5 mb-4 mb-md-0\">\n    \n            <div class=\"view\">\n              <img src=\"https://mdbootstrap.com/img/illustrations/undraw_Group_chat_unwm.svg\" class=\"img-fluid\" alt=\"smaple image\">\n            </div>\n    \n          </div>\n          <!-- Grid column -->\n    \n          <!-- Grid column -->\n          <div class=\"col-md-7 mb-lg-0 mb-4\">\n    \n            <!-- Form -->\n            <form class=\"\" action=\"\">\n    \n              <!-- Section heading -->\n              <h3 class=\"font-weight-bold my-3\">Subscribe</h3>\n              \n              <p class=\"text-muted mb-4 pb-2\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam vitae, fuga similique quos aperiam tenetur quo ut rerum debitis.</p>\n     \n              <div class=\"input-group\">\n                <input type=\"email\" class=\"form-control\" placeholder=\"Enter your email address\" aria-label=\"Enter your email address\"\n                  aria-describedby=\"button-addon2\">\n                <div class=\"input-group-append\">\n                  <button class=\"btn btn-md btn-primary rounded-right m-0 px-3 py-2 z-depth-0 waves-effect\" type=\"submit\" id=\"button-addon2\">Button</button>\n                </div>\n              </div>\n              <small class=\"form-text black-text\"><strong>* Leave your email addres to be notified first.</strong></small>\n              \n            </form>\n            <!-- Form -->\n    \n          </div>\n          <!-- Grid column -->\n    \n        </div>\n        <!-- Grid row -->\n        \n      </section>\n      <!--Section: Content-->\n    \n    \n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ValidateUploadComponent } from 'src/app/PopUp/validate-upload/validate-upload.component';\nimport { error } from '@angular/compiler/src/util';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-maladie-plant',\n  templateUrl: './add-maladie-plant.component.html',\n  styleUrls: ['./add-maladie-plant.component.css']\n})\nexport class AddMaladiePlantComponent implements OnInit {\n\n  errorMessage = '';\n\n  maladies : MaladiePlante = {\n    nomMaladie : '',\n    symptomes : '',\n    causes : '',\n    traitement : '',\n    actionsPreventives: ''\n  } ;\n  constructor(private maladieService:MaladiesService,\n              private modalService: NgbModal,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  addMaladie(form: NgForm) {\n    this.maladieService.addOne(this.maladies).subscribe(maladie => {\n      this.maladies = maladie;\n      err =>{\n          console.log(err);\n        this.errorMessage = err.error.message;\n        this.toastr.error(err.error.message);\n\n        }\n      console.log(JSON.stringify(maladie));\n      form.reset();\n    })\n  }\n\n  open() {\n    // const modalRef = this.modalService.open(ValidateUploadComponent);\n    if (this.maladies.nomMaladie == null || this.maladies.nomMaladie == '' ||\n        this.maladies.symptomes == null || this.maladies.symptomes == '' ||\n        this.maladies.causes == null || this.maladies.causes == '' ||\n        this.maladies.traitement == null || this.maladies.traitement == '' || \n        this.maladies.actionsPreventives == null || this.maladies.actionsPreventives == ''){\n          this.toastr.error('Faux! Veuillez remplir tous les blancs ');\n          // modalRef.componentInstance.msg = 'Faux! Veuillez remplir tous les blancs ';\n          return false;\n    }else{\n      this.toastr.success('les information a bien été enregistrer!');\n      // modalRef.componentInstance.msg = 'les information a bien été enregistrer!';\n      return true;\n    }\n  }\n}\n","<div class=\"content\">\n    <form (ngSubmit)=\"addMaladie(form)\" #form=\"ngForm\" class=\"justify-content-center p-4\">\n        <div class=\"form-group\">\n            <label for=\"formGroupNomMal\" style=\"font-size: x-large;\">Nom de maladie</label>\n            <input [(ngModel)]=\"maladies.nomMaladie\" name=\"nomMaladie\" type=\"text\" class=\"form-control\" id=\"formGroupNomMal\" placeholder=\"Entrer le nom de la maladie\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les symptomes</label>\n            <textarea [(ngModel)]=\"maladies.symptomes\" name=\"symptomes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les symptomes\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les causes</label>\n            <textarea [(ngModel)]=\"maladies.causes\" name=\"causes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les causes\"></textarea>\n        </div>\n        \n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Le traitement</label>\n            <textarea [(ngModel)]=\"maladies.traitement\" name=\"traitement\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer le traitement\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les actions préventives</label>\n            <textarea [(ngModel)]=\"maladies.actionsPreventives\" name=\"actionsPreventives\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les actions préventives\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n            <button class=\"btn btn-secondary\" type=\"submit\" (click)=\"open()\">Enregistrer</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { error } from 'protractor';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-info-maladies',\n  templateUrl: './info-maladies.component.html',\n  styleUrls: ['./info-maladies.component.css']\n})\nexport class InfoMaladiesComponent implements OnInit {\n\n  maladies : MaladiePlante ;\n  constructor(private route:ActivatedRoute,\n              private router:Router,\n              private maladiesService:MaladiesService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(mldId => {\n      console.log(\"id is => \", mldId)\n      this.maladiesService.findById(mldId.id).subscribe( maladie => {\n        this.maladies = maladie;\n        console.log(JSON.stringify(maladie));\n      })\n\n      error => {\n        console.log(\"error : \", error);\n      }\n    })\n  }\n\n\n  editMaladie(f:NgForm){\n    this.maladiesService.update(this.maladies).subscribe(()=>{\n      this.router.navigate(['listeMaladies']);\n      f.reset()\n    })\n  }\n\n}\n","<div class=\"content\">\n  <form (ngSubmit)=\"editMaladie(f)\" *ngIf=\"maladies\" #f=\"ngForm\" class=\"justify-content-center p-4\">\n      <div class=\"form-group\">\n          <label for=\"formGroupNomMal\" style=\"font-size: x-large;\">Nom de maladie</label>\n          <input [(ngModel)]=\"maladies.nomMaladie\" name=\"nomMaladie\" type=\"text\" class=\"form-control\" id=\"formGroupNomMal\" placeholder=\"Entrer le nom de la maladie\">\n      </div>\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les symptomes</label>\n          <textarea [(ngModel)]=\"maladies.symptomes\" name=\"symptomes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les symptomes\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les causes</label>\n          <textarea [(ngModel)]=\"maladies.causes\" name=\"causes\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les causes\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Le traitement</label>\n          <textarea [(ngModel)]=\"maladies.traitement\" name=\"traitement\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer le traitement\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\" style=\"font-size: x-large;\">Les actions préventives</label>\n          <textarea [(ngModel)]=\"maladies.actionsPreventives\" name=\"actionsPreventives\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Entrer les actions préventives\"></textarea>\n      </div>\n\n      <div class=\"form-group\">\n          <button class=\"btn btn-info\" type=\"submit\"><i class=\"fas fa-edit\"> Update</i></button>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MaladiesService } from 'src/app/services/maladies.service';\nimport { MaladiePlante } from 'src/app/models/maladies-plant';\nimport { Router } from '@angular/router';\nimport { Console } from 'console';\n\n/**\n * Component\n */\n@Component({\n  selector: 'app-list-maladie-plant',\n  templateUrl: './list-maladie-plant.component.html',\n  styleUrls: ['./list-maladie-plant.component.css']\n})\nexport class ListMaladiePlantComponent implements OnInit {\n\n  /**\n   * Maladies  of list maladie plant component\n   */\n\n  maladies : MaladiePlante[] ;\n\n  /**\n   * Creates an instance of list maladie plant component.\n   * @param maladieService\n   * @param router\n   */\n  constructor(private maladieService:MaladiesService,\n              private router: Router) { }\n\n  /**\n   * on init\n   */\n  ngOnInit(): void {\n    this.getMaladies();\n  }\n\n  /**\n   * Gets maladies\n   */\n  getMaladies() {\n    this.maladieService.findAll().subscribe(maladies => this.maladies = maladies )\n  }\n\n  /**\n   * Adds list maladie plant component\n   */\n  add() {\n    this.router.navigate(['/add-maladies']);\n  }\n\n  /**\n   * Delete maladie\n   * @param id\n   */\n  deleteMaladie(id){\n    if(confirm(\"Are you sure to delete this maladiePlante\")){\n      this.maladieService.delete(id).subscribe(()=>{\n        this.maladies = this.maladies.filter(maladie => maladie.idMaladiePlante != id);\n      })\n    }\n  }\n\n  editMaladie(id){\n    this.router.navigate(['edit/maladie', id]);\n  }\n\n  /**\n   * Gets by id\n   * @param id\n   */\n  getById(idMld: number) {\n    this.router.navigate(['/info/maladie',idMld]);\n    console.log(\"id is => \", idMld)\n  }\n\n  /**\n   * Searchs by name\n   */\n  searchByName(query) {\n    console.log(\"ok\")\n  }\n}\n","<div class=\"content\">\n    <div class=\"p-4\">\n        <div class=\"row\">\n            <h2 class=\"col-md-3  d-md-block d-none p-4\">La liste des maladies plantes</h2>\n            <h2 class=\"d-md-none d-block p-4\">La liste des maladies plantes</h2>\n            <div class=\"col-md-2 d-none d-md-block\"></div>\n            <div class=\"col-md-2 d-none d-md-block\"></div>\n            <div class=\"col-md-2 d-none d-md-block\"></div>\n            <div class=\"col-md-3 text-right\">\n                <button class=\"btn\" (click)=\"add()\">\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> <span class=\"badge badge-primary\"></span>\n                </button>\n            </div>\n        </div>\n        <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" id=\"myInput\" placeholder=\"Recherche par noms..\" title=\"Type in a name\">\n        </div>\n        <ul *ngFor=\"let maladie of maladies\" class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n                <span class=\"item_name\">{{maladie.nomMaladie}}</span>\n                <a (click)=\"deleteMaladie(maladie.idMaladiePlante)\"><i class=\"fas fa-trash-alt item_delete\"></i></a>\n                <a (click)=\"editMaladie(maladie.idMaladiePlante)\"><i class=\"fas fa-pen item_edit\"></i></a>\n            </li>\n        </ul>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { TokenStorageService } from './token-storage.service';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgriculAuthGuardService implements CanActivate{\n\n  constructor(private route:Router, private authStorage:TokenStorageService,private toastr: ToastrService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, \n              state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree{\n    if((this.authStorage.getUser()== null) || (this.authStorage.getUserType() !== 'AGRICULTURE')){\n      this.route.navigate([\"login\"],{queryParams:{retUrl:state.url}});\n      this.toastr.error(\"Vous devez être connecté\");\n      return false;\n    }else{\n      return true;\n    }\n  }\n}\n","import { Injectable, Output, EventEmitter} from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst AGRICULTURE_API = AUTH_API + 'agriculture/';\nconst EXPERT_API = AUTH_API + 'expert/';\nconst ADMIN_API = AUTH_API + 'admin/';\nconst AUTH_user = AUTH_API + 'user'\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  @Output() getLoggedInUser: EventEmitter<User> = new EventEmitter();\n\n  constructor(private http:HttpClient) { }\n\n  login(credentials, api:string): Observable<User> {\n    console.log(\"username: \" + credentials.username + \" password: \" + credentials.password );\n    return this.http.post<User>(api + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user, api:string):Observable<any> {\n    return this.http.post(api + 'signup', {\n      firstname:user.firstname,\n      lastname:user.lastname,\n      email: user.email,\n      username: user.username,\n      password: user.password\n    }, httpOptions);\n  }\n\n  agricultureLogin(credentials): Observable<User> {\n    return this.login(credentials, AGRICULTURE_API);\n  }\n\n  agricultureRegister(user): Observable<any>{\n    return this.register(user, AGRICULTURE_API);\n  }\n\n  expertLogin(credentials): Observable<User> {\n    return this.login(credentials, EXPERT_API);\n  }\n\n  expertRegister(user): Observable<any> {\n    return this.register(user, EXPERT_API);\n  }\n\n  adminLogin(credentials) :Observable<User> {\n    return this.login(credentials, ADMIN_API);\n  }\n\n  adminRegister(user) :Observable<any> {\n    return this.register(user, ADMIN_API);\n  }\n\n  getCurrentUser() :Observable<User> {\n    return this.http.get<User>(AUTH_user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { TokenStorageService } from './token-storage.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpertAuthGuardService {\n\n  constructor(private route:Router, private authStorage:TokenStorageService,private toastr: ToastrService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree{\n      if((this.authStorage.getUser()== null) || (this.authStorage.getUserType() !== 'EXPERT')){\n      this.route.navigate([\"login\"],{queryParams:{retUrl:state.url}});\n      this.toastr.error(\"Vous devez être connecté\");\n      return false;\n      }else{\n      return true;\n      }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Image } from '../models/images';\nimport { Observable } from 'rxjs';\n\n\nconst API_URL = 'http://localhost:8080/api/img/';\n\n/**\n * Injectable\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesService {\n\n  /**\n   * Images  of images service\n   */\n  images : Image;\n\n  /**\n   * Creates an instance of images service.\n   * @param http \n   */\n  constructor(private http:HttpClient) { }\n\n  /**\n   * Finds all the images\n   * @returns all \n   */\n  findAll() : Observable<Image>  {\n    return this.http.get<Image>(API_URL + 'images');\n  }\n\n  /**\n   * Finds all the images that are not trait \n   * @returns all non trit \n   */\n  findAllNonTrit() : Observable<Image> {\n    return this.http.get<Image>(API_URL + 'images/nontraiter');\n  }\n\n  /**\n   * Finds all the images that are trait\n   * @returns all trit \n   */\n  findAllTrit() : Observable<Image> {\n    return this.http.get<Image>(API_URL + 'images/traiter');\n  }\n\n  /**\n   * Finds by id\n   * @param id \n   * @returns by id \n   */\n  findByID(id: number) : Observable<Image> {\n    return this.http.get<Image>(API_URL + 'images/' + id)\n  }\n\n\n  /**\n   * Deletes by id\n   * @param id \n   * @returns by id \n   */\n  deleteById(id: number) : Observable<Image> {\n    return this.http.delete<Image>(API_URL + 'images/' + id);\n  }\n\n  /**\n   * Updates by id\n   * @param image \n   * @returns by id \n   */\n  updateById(image: Image) : Observable<Image> {\n    return this.http.put<Image>(API_URL + 'images/' + image.id, image);\n  }\n\n\n  /**\n   * Add response to user\n   * @param image \n   * @returns resp \n   */\n  addResp(image: Image) : Observable<Image>  {\n    return this.http.put<Image>(API_URL + 'donneravis/'+image.id , image);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MaladiePlante } from '../models/maladies-plant';\nimport { Observable } from 'rxjs';\n\nconst API_URL = 'http://localhost:8080/api/mld';\n\n\n/**\n * Injectable\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaladiesService {\n\n\n  /**\n   * Maladies  of maladies service\n   */\n  maladies : MaladiePlante;\n\n  /**\n   * Creates an instance of maladies service.\n   * @param http\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Adds one\n   * @param maladie\n   * @returns one\n   */\n  addOne(maladie: MaladiePlante): Observable<MaladiePlante> {\n    return this.http.post<MaladiePlante>(`${API_URL}`, maladie);\n  }\n\n  /**\n   * Finds all\n   * @returns all\n   */\n  findAll(): Observable<MaladiePlante[]> {\n    return this.http.get<MaladiePlante[]>(`${API_URL}`);\n  }\n\n  /**\n   * Finds by id\n   * @param id\n   * @returns by id\n   */\n  findById(id: number): Observable<MaladiePlante> {\n    return this.http.get<MaladiePlante>(`${API_URL}/${id}`);\n  }\n\n  /**\n   * Deletes maladies service\n   * @param id\n   * @returns delete\n   */\n  delete(id: number): Observable<MaladiePlante> {\n    return this.http.delete<MaladiePlante>(`${API_URL}/${id}`)\n  }\n\n  /**\n   * Updates maladies service\n   * @param maladie\n   * @returns update\n   */\n  update(maladie: MaladiePlante ): Observable<MaladiePlante> {\n    return this.http.put<MaladiePlante>(`${API_URL}/ ${maladie.idMaladiePlante}`, maladie)\n  }\n\n  search(maladie: MaladiePlante): Observable<MaladiePlante>{\n    return this.http.get<MaladiePlante>(`${API_URL}/nomMLD${maladie}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nconst USER_TYPE = 'user-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUserType(userType:string){\n    console.log(\"saving in storage \" + USER_TYPE + \":\" + userType)\n\n    localStorage.removeItem(USER_TYPE);\n    localStorage.setItem(USER_TYPE, userType);\n  }\n\n  public getUserType(): string {\n    return localStorage.getItem(USER_TYPE);\n  }\n\n  public saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser() {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}